[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Research",
    "section": "",
    "text": "Crypto Ethereum SQL queries\n\n\n\n\n\n\ncrypto bigquery python analysis\n\n\n\n\n\n\n\n\n\nApr 24, 2024\n\n\n2 min\n\n\n\n\n\n\n\nStatistics Terminology\n\n\n\n\n\n\nstatistics\n\n\n\n\n\n\n\n\n\nApr 21, 2024\n\n\n1 min\n\n\n\n\n\n\n\nComputer Science\n\n\n\n\n\n\nruby\n\n\ncode\n\n\n\n\n\n\n\n\n\nOct 26, 2023\n\n\n12 min\n\n\n\n\n\n\n\nlangchainrb eth拡張\n\n\n\n\n\n\nruby\n\n\nai\n\n\ncode\n\n\nllm\n\n\ncrypto\n\n\n\n\n\n\n\n\n\nAug 16, 2023\n\n\n1 min\n\n\n\n\n\n\n\nlangchainrb ツールの連携\n\n\n\n\n\n\nruby\n\n\nai\n\n\ncode\n\n\nllm\n\n\n\n\n\n\n\n\n\nAug 8, 2023\n\n\n1 min\n\n\n\n\n\n\n\nopenai functions and embeddings\n\n\n\n\n\n\nai\n\n\nruby\n\n\n\n\n\n\n\n\n\nAug 5, 2023\n\n\n5 min\n\n\n\n\n\n\n\n公式\n\n\n\n\n\n\nmath\n\n\n\n\n\n\n\n\n\nAug 3, 2023\n\n\n1 min\n\n\n\n\n\n\n\n2進数、連立方程式\n\n\n\n\n\n\nruby\n\n\nmath\n\n\ncode\n\n\n\n\n\n\n\n\n\nJul 30, 2023\n\n\n2 min\n\n\n\n\n\n\n\n数学2、指数関数、対数関数、三角関数\n\n\n\n\n\n\nruby\n\n\nmath\n\n\ncode\n\n\n\n\n\n\n\n\n\nJul 23, 2023\n\n\n1 min\n\n\n\n\n\n\n\n高校数学、単元リスト\n\n\n\n\n\n\nruby\n\n\nmath\n\n\ncode\n\n\n\n\n\n\n\n\n\nJul 21, 2023\n\n\n1 min\n\n\n\n\n\n\n\neth\n\n\n\n\n\n\nruby\n\n\ncrypto\n\n\ncode\n\n\n\n\n\n\n\n\n\nJul 17, 2023\n\n\n1 min\n\n\n\n\n\n\n\nBoxcars\n\n\n\n\n\n\nruby\n\n\nai\n\n\ncode\n\n\nllm\n\n\n\n\n\n\n\n\n\nJul 16, 2023\n\n\n1 min\n\n\n\n\n\n\n\nlangchainrb\n\n\n\n\n\n\nruby\n\n\nai\n\n\ncode\n\n\nllm\n\n\n\n\n\n\n\n\n\nJul 15, 2023\n\n\n1 min\n\n\n\n\n\n\n\nDaru\n\n\n\n\n\n\nruby\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJul 13, 2023\n\n\n2 min\n\n\n\n\n\n\n\nIntroduction to Modeling in Gen\n\n\n\n\n\n\njulia\n\n\nprobcomp\n\n\ncode\n\n\nai\n\n\n\n\n\n\n\n\n\nJul 13, 2023\n\n\n3 min\n\n\n\n\n\n\n\nrb_prob\n\n\n\n\n\n\nruby\n\n\nprobcomp\n\n\ncode\n\n\nai\n\n\n\n\n\n\n\n\n\nJul 13, 2023\n\n\n9 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-07-16/index.html",
    "href": "posts/2023-07-16/index.html",
    "title": "Boxcars",
    "section": "",
    "text": "https://github.com/BoxcarsAI/boxcars\n\nrequire 'boxcars'\n\ntrue\n\n\n\n# showcase Google Serp search\ns = Boxcars::GoogleSearch.new\ns.run \"what temperature is it in Phoenix?\"\n\nQuestion: what temperature is it in Phoenix?\nAnswer: 10 Day Weather-Phoenix, AZ. As of 4:13 am MST. Today. 81°/60°. 1%. Thu 25 | Day. 81°. 1%. SW 14 mph. Plenty of sunshine. High 81F. Winds SW at 10 to 20 mph.\n\n\n\"10 Day Weather-Phoenix, AZ. As of 4:13 am MST. Today. 81°/60°. 1%. Thu 25 | Day. 81°. 1%. SW 14 mph. Plenty of sunshine. High 81F. Winds SW at 10 to 20 mph.\"\n\n\n\nrequire 'active_support'\n\nengine = Boxcars::Openai.new(max_tokens: 256)\ncalc = Boxcars::Calculator.new(engine: engine)\nputs calc.run \"what is pi to the forth power divided by 22.1?\"\n\n&gt; Entering Calculator#run\nwhat is pi to the forth power divided by 22.1?\nRubyREPL: puts((Math::PI**4) / 22.1)\nAnswer: 4.407651178009159\n\n{\"status\":\"ok\",\"answer\":\"4.407651178009159\",\"explanation\":\"Answer: 4.407651178009159\",\"code\":\"puts((Math::PI**4) / 22.1)\"}\n&lt; Exiting Calculator#run\n4.407651178009159\n\n\nIt is necessary to add gem ‘activesupport’ to call blank?.\nhttps://github.com/BoxcarsAI/boxcars/blob/c92c1f29aac6485903731ad8d8a2cbbb1c2a7b24/lib/boxcars/ruby_repl.rb#L22"
  },
  {
    "objectID": "posts/2023-07-21/index.html",
    "href": "posts/2023-07-21/index.html",
    "title": "高校数学、単元リスト",
    "section": "",
    "text": "高校数学\n\n\n\n\n\ngraph TB\n  数学1--&gt;数と式\n  数学1--&gt;関数と計算\n  数学1--&gt;二次関数\n  数学1--&gt;データの分析\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学2--&gt;いろいろな式\n  数学2--&gt;図形と方程式\n  数学2--&gt;指数関数ー対数関数\n  数学2--&gt;三角関数\n  数学2--&gt;微分積分\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学3--&gt;極限\n  数学3--&gt;微分法\n  数学3--&gt;積分法\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学A--&gt;図形の性質\n  数学A--&gt;場合の数と確率\n  数学A--&gt;数学と人間の活動\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学B--&gt;数列\n  数学B--&gt;統計的な推測\n  数学B--&gt;数学と社会生活\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学C--&gt;ベクトル\n  数学C--&gt;平面上の曲線と複素数平面\n  数学C--&gt;数学的な表現の工夫\n\n\n\n\n\n\n大学数学\n\n\n\n\n\ngraph TB\n  教養数学--&gt;統計学\n  教養数学--&gt;微分積分学\n  教養数学--&gt;線形代数\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  数学基礎--&gt;論理学\n  数学基礎--&gt;集合論\n  数学基礎--&gt;位相空間論\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  解析学--&gt;ベクトル解析\n  解析学--&gt;解析学の基礎\n  解析学--&gt;常微分方程式論\n  解析学--&gt;フーリエ変換\n  解析学--&gt;複素数解析学\n  解析学--&gt;ルベーグ積分論\n  解析学--&gt;計算数理\n  解析学--&gt;偏微分方程式論\n  解析学--&gt;関数解析学\n  解析学--&gt;スペクトル論\n  解析学--&gt;確率論\n  解析学--&gt;確率微分方程式論\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  代数学--&gt;代数学基礎ー群論ー環論\n  代数学--&gt;体論ーガロア理論\n  代数学--&gt;代数的整数論\n  代数学--&gt;ホモロジー代数学\n  代数学--&gt;数論幾何学\n  代数学--&gt;組合せ論\n\n\n\n\n\n\n\n\n\n\n\ngraph TB\n  幾何学--&gt;微分幾何学\n  幾何学--&gt;多様体論\n  幾何学--&gt;位相幾何学\n  幾何学--&gt;可微分多様体論\n  幾何学--&gt;リー群論\n  幾何学--&gt;代数多様体論\n  幾何学--&gt;代数幾何学\n  幾何学--&gt;表現論"
  },
  {
    "objectID": "posts/2024-04-24/index.html",
    "href": "posts/2024-04-24/index.html",
    "title": "Crypto Ethereum SQL queries",
    "section": "",
    "text": "!pip install bigquery\n!pip install db-dtypes\n\nRequirement already satisfied: bigquery in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (0.0.41)\nRequirement already satisfied: dbstream&gt;=0.1.19 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from bigquery) (0.1.25)\nRequirement already satisfied: google-cloud-bigquery&gt;=2.4.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from bigquery) (3.21.0)\nRequirement already satisfied: googleauthentication&gt;=0.0.12 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from bigquery) (0.0.17)\nRequirement already satisfied: google-cloud-bigquery-storage&gt;=2.1.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from bigquery) (2.24.0)\nRequirement already satisfied: pandas==1.3.4 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from bigquery) (1.3.4)\nRequirement already satisfied: pyarrow&gt;=2.0.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from bigquery) (16.0.0)\nRequirement already satisfied: python-dateutil&gt;=2.7.3 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from pandas==1.3.4-&gt;bigquery) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2017.3 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from pandas==1.3.4-&gt;bigquery) (2024.1)\nRequirement already satisfied: numpy&gt;=1.21.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from pandas==1.3.4-&gt;bigquery) (1.26.4)\nRequirement already satisfied: dacktool&gt;=0.0.7 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from dbstream&gt;=0.1.19-&gt;bigquery) (0.0.7)\nRequirement already satisfied: requests&gt;=2.22.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from dbstream&gt;=0.1.19-&gt;bigquery) (2.31.0)\nRequirement already satisfied: google-api-core&gt;=2.3.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from dbstream&gt;=0.1.19-&gt;bigquery) (2.18.0)\nRequirement already satisfied: google-auth&lt;3.0.0dev,&gt;=2.14.1 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (2.29.0)\nRequirement already satisfied: google-cloud-core&lt;3.0.0dev,&gt;=1.6.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (2.4.1)\nRequirement already satisfied: google-resumable-media&lt;3.0dev,&gt;=0.6.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (2.7.0)\nRequirement already satisfied: packaging&gt;=20.0.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (24.0)\nRequirement already satisfied: proto-plus&lt;2.0.0dev,&gt;=1.22.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-bigquery-storage&gt;=2.1.0-&gt;bigquery) (1.23.0)\nRequirement already satisfied: protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,&lt;5.0.0dev,&gt;=3.19.5 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-bigquery-storage&gt;=2.1.0-&gt;bigquery) (4.25.3)\nRequirement already satisfied: google-api-python-client==1.7.11 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from googleauthentication&gt;=0.0.12-&gt;bigquery) (1.7.11)\nRequirement already satisfied: google-auth-httplib2==0.0.3 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from googleauthentication&gt;=0.0.12-&gt;bigquery) (0.0.3)\nRequirement already satisfied: google-auth-oauthlib&gt;=0.4.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from googleauthentication&gt;=0.0.12-&gt;bigquery) (1.2.0)\nRequirement already satisfied: cryptography&gt;=2.7 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from googleauthentication&gt;=0.0.12-&gt;bigquery) (42.0.5)\nRequirement already satisfied: google-cloud-secret-manager==2.7.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from googleauthentication&gt;=0.0.12-&gt;bigquery) (2.7.2)\nRequirement already satisfied: httplib2&lt;1dev,&gt;=0.9.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-api-python-client==1.7.11-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (0.22.0)\nRequirement already satisfied: six&lt;2dev,&gt;=1.6.1 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-api-python-client==1.7.11-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (1.16.0)\nRequirement already satisfied: uritemplate&lt;4dev,&gt;=3.0.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-api-python-client==1.7.11-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (3.0.1)\nRequirement already satisfied: grpc-google-iam-v1&lt;0.13dev,&gt;=0.12.3 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-secret-manager==2.7.2-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (0.12.7)\nRequirement already satisfied: libcst&gt;=0.2.5 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-cloud-secret-manager==2.7.2-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (1.3.1)\nRequirement already satisfied: cffi&gt;=1.12 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from cryptography&gt;=2.7-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (1.16.0)\nRequirement already satisfied: googleapis-common-protos&lt;2.0.dev0,&gt;=1.56.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-api-core&gt;=2.3.2-&gt;dbstream&gt;=0.1.19-&gt;bigquery) (1.63.0)\nRequirement already satisfied: grpcio&lt;2.0dev,&gt;=1.33.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-api-core[grpc]!=2.0.*,!=2.1.*,!=2.10.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,&lt;3.0.0dev,&gt;=1.34.1-&gt;google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (1.62.2)\nRequirement already satisfied: grpcio-status&lt;2.0.dev0,&gt;=1.33.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-api-core[grpc]!=2.0.*,!=2.1.*,!=2.10.*,!=2.2.*,!=2.3.*,!=2.4.*,!=2.5.*,!=2.6.*,!=2.7.*,!=2.8.*,!=2.9.*,&lt;3.0.0dev,&gt;=1.34.1-&gt;google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (1.62.2)\nRequirement already satisfied: cachetools&lt;6.0,&gt;=2.0.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-auth&lt;3.0.0dev,&gt;=2.14.1-&gt;google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (5.3.3)\nRequirement already satisfied: pyasn1-modules&gt;=0.2.1 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-auth&lt;3.0.0dev,&gt;=2.14.1-&gt;google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (0.4.0)\nRequirement already satisfied: rsa&lt;5,&gt;=3.1.4 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-auth&lt;3.0.0dev,&gt;=2.14.1-&gt;google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (4.9)\nRequirement already satisfied: requests-oauthlib&gt;=0.7.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-auth-oauthlib&gt;=0.4.0-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (2.0.0)\nRequirement already satisfied: google-crc32c&lt;2.0dev,&gt;=1.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from google-resumable-media&lt;3.0dev,&gt;=0.6.0-&gt;google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (1.5.0)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from requests&gt;=2.22.0-&gt;dbstream&gt;=0.1.19-&gt;bigquery) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from requests&gt;=2.22.0-&gt;dbstream&gt;=0.1.19-&gt;bigquery) (3.7)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from requests&gt;=2.22.0-&gt;dbstream&gt;=0.1.19-&gt;bigquery) (2.2.1)\nRequirement already satisfied: certifi&gt;=2017.4.17 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from requests&gt;=2.22.0-&gt;dbstream&gt;=0.1.19-&gt;bigquery) (2024.2.2)\nRequirement already satisfied: pycparser in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from cffi&gt;=1.12-&gt;cryptography&gt;=2.7-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (2.22)\nRequirement already satisfied: pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,&lt;4,&gt;=2.4.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from httplib2&lt;1dev,&gt;=0.9.2-&gt;google-api-python-client==1.7.11-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (3.1.2)\nRequirement already satisfied: pyyaml&gt;=5.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from libcst&gt;=0.2.5-&gt;google-cloud-secret-manager==2.7.2-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (6.0.1)\nRequirement already satisfied: pyasn1&lt;0.7.0,&gt;=0.4.6 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from pyasn1-modules&gt;=0.2.1-&gt;google-auth&lt;3.0.0dev,&gt;=2.14.1-&gt;google-cloud-bigquery&gt;=2.4.0-&gt;bigquery) (0.6.0)\nRequirement already satisfied: oauthlib&gt;=3.0.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from requests-oauthlib&gt;=0.7.0-&gt;google-auth-oauthlib&gt;=0.4.0-&gt;googleauthentication&gt;=0.0.12-&gt;bigquery) (3.2.2)\nRequirement already satisfied: db-dtypes in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (1.2.0)\nRequirement already satisfied: packaging&gt;=17.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from db-dtypes) (24.0)\nRequirement already satisfied: pandas&gt;=0.24.2 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from db-dtypes) (1.3.4)\nRequirement already satisfied: pyarrow&gt;=3.0.0 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from db-dtypes) (16.0.0)\nRequirement already satisfied: numpy&gt;=1.16.6 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from db-dtypes) (1.26.4)\nRequirement already satisfied: python-dateutil&gt;=2.7.3 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from pandas&gt;=0.24.2-&gt;db-dtypes) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2017.3 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from pandas&gt;=0.24.2-&gt;db-dtypes) (2024.1)\nRequirement already satisfied: six&gt;=1.5 in /Users/masumi/.local/share/mise/installs/python/3.12/lib/python3.12/site-packages (from python-dateutil&gt;=2.7.3-&gt;pandas&gt;=0.24.2-&gt;db-dtypes) (1.16.0)\n\n\n\n#Importing necessary modules\nfrom google.cloud import bigquery\nfrom google.oauth2 import service_account\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\n%matplotlib inline\n\n# Create a \"Client\" object\nkey_path = os.environ['BIGQUERY_SERVICE_ACCOUNT_AUTH_FILE_PATH']\ncredentials = service_account.Credentials.from_service_account_file(key_path, scopes=[\"https://www.googleapis.com/auth/cloud-platform\"])\nclient = bigquery.Client(credentials=credentials, project=credentials.project_id)\n\n\n# Construct a reference to the \"Ethereum Blockchain\" dataset\neth_ref = client.dataset(\"crypto_ethereum\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(eth_ref)\n\n# List all the tables in the \"crypto_ethereum\" dataset\ntables = list(client.list_tables(dataset))\n\n# Print names of all tables in the dataset\nfor table in tables:\n    print(table.table_id)\n\namended_tokens\nbalances\nblocks\ncontracts\nload_metadata\nlogs\nsessions\ntoken_transfers\ntokens\ntraces\ntransactions\n\n\nUse a function to show amount of data to be scanned for a query not to exceed the limit for a Kaggle user, before actually running the query\n\ndef show_amount_of_data_scanned(query):\n    # dry_run lets us see how much data the query uses without running it\n    dry_run_config = bigquery.QueryJobConfig(dry_run=True)\n    query_job = client.query(query, job_config=dry_run_config)\n    print('Data processed: {} GB'.format(round(query_job.total_bytes_processed / 10**9, 3)))"
  },
  {
    "objectID": "posts/2023-10-26/index.html",
    "href": "posts/2023-10-26/index.html",
    "title": "Computer Science",
    "section": "",
    "text": "https://github.com/shhossain/computer_science\n\nHeap Sort\n\ndef heapify(arr, n, i)\n    largest = i  # Initialize largest as root\n    l = 2*i + 1  # left = 2*i + 1\n    r = 2*i + 2  # right = 2*i + 2\n\n    # If left child is larger than root\n    if l &lt; n and arr[l] &gt; arr[largest]\n        largest = l\n    end\n\n    # If right child is larger than largest so far\n    if r &lt; n and arr[r] &gt; arr[largest]\n        largest = r\n    end\n\n    # If largest is not root\n    if largest != i\n        arr[i], arr[largest] = arr[largest], arr[i]\n\n        # Recursively heapify the affected sub-tree\n        heapify(arr, n, largest)\n    end\nend\n\n# main function to do heap sort\ndef heap_sort(arr)\n    n = arr.length\n\n    # Build heap (rearrange array)\n    (n/2 - 1).downto(0) do |i|\n        heapify(arr, n, i)\n    end\n\n    # One by one extract an element from heap\n    (n-1).downto(0) do |i|\n        # Move current root to end\n        arr[0], arr[i] = arr[i], arr[0]\n\n        # call max heapify on the reduced heap\n        heapify(arr, i, 0)\n    end\nend\n\n# Driver code\narr = [12, 11, 13, 5, 6, 7]\nheap_sort(arr)\nn = arr.length\nputs \"Sorted array is\"\nfor i in 0..n-1 do\n    print arr[i]\nend\nputs\n\nSorted array is\n567111213\n\n\n\n\nSequential Search\n\n# Ruby program to search an item into the array\n# using linear search\n\narr = [12,45,23,39,37];\n\ni    =   0;\nitem =   0;\nflag =   0;\n\nprint \"Enter item: \";\n# item = gets.chomp.to_i;\nitem = 12\n\nflag = -1\nwhile(i&lt;arr.size)\n    if(arr[i]==item)\n        flag = i;\n        break;\n    end\n    i = i + 1;\nend\n\n\nif(flag&gt;=0)\n    print \"Item found at index: \",flag,\"\\n\";\nelse\n    print \"Item not found\\n\";\nend\n# Ruby program to search an item into the array\n# using linear search\n\narr = [12,45,23,39,37];\n\ni    =   0;\nitem =   0;\nflag =   0;\n\nprint \"Enter item: \";\n# item = gets.chomp.to_i;\nitem = 45\n\nflag = -1\nwhile(i&lt;arr.size)\n    if(arr[i]==item)\n        flag = i;\n        break;\n    end\n    i = i + 1;\nend\n\n\nif(flag&gt;=0)\n    print \"Item found at index: \",flag,\"\\n\";\nelse\n    print \"Item not found\\n\";\nend\n\nEnter item: Item found at index: 0\nEnter item: Item found at index: 1\n\n\n\n\nQuick Sort\n\n# This function takes last element as pivot, places\n# the pivot element at its correct position in sorted\n# array, and places all smaller (smaller than pivot)\n# to left of pivot and all greater elements to right\n# of pivot\n\ndef partition(arr, low, high)\n    i = low - 1\n    pivot = arr[high]\n\n    for j in low..high - 1\n        if arr[j] &lt;= pivot\n            i += 1\n            arr[i], arr[j] = arr[j], arr[i]\n        end\n    end\n    arr[i + 1], arr[high] = arr[high], arr[i + 1]\n    return i + 1\nend\n\n# The main function that implements QuickSort\n# arr[] --&gt; Array to be sorted,\n# low  --&gt; Starting index,\n# high  --&gt; Ending index\ndef quick_sort(arr, low, high)\n    if low &lt; high\n        # pi is partitioning index, arr[p] is now\n        # at right place\n        pi = partition(arr, low, high)\n\n        # Separately sort elements before\n        # partition and after partition\n        quick_sort(arr, low, pi - 1)\n        quick_sort(arr, pi + 1, high)\n    end\nend\n\n# Function to print an array\ndef print_array(arr, size)\n    for i in 0..size - 1\n        print arr[i], \" \"\n    end\n    puts\nend\n\n# Driver code\narr = [10, 7, 8, 9, 1, 5]\nn = arr.length\nquick_sort(arr, 0, n - 1)\nputs \"Sorted array: \"\nprint_array(arr, n)\n\nSorted array: \n1 5 7 8 9 10 \n\n\n\n\nBubble Sort\n\ndef bubble_sort(arr)\n  n = arr.length\n  loop do\n    swapped = false\n    (n-1).times do |i|\n      if arr[i] &gt; arr[i+1]\n        arr[i], arr[i+1] = arr[i+1], arr[i]\n        swapped = true\n      end\n    end\n    break if not swapped\n  end\n  arr\nend\n\ndef bubble_sort_desc(arr)\n  n = arr.length\n  loop do\n    swapped = false\n    (n-1).times do |i|\n      if arr[i] &lt; arr[i+1]\n        arr[i], arr[i+1] = arr[i+1], arr[i]\n        swapped = true\n      end\n    end\n    break if not swapped\n  end\n  arr\nend\n\narr = [64, 34, 25, 12, 22, 11, 90]\np bubble_sort(arr)\np bubble_sort_desc(arr)\n\n[11, 12, 22, 25, 34, 64, 90]\n[90, 64, 34, 25, 22, 12, 11]\n\n\n[90, 64, 34, 25, 22, 12, 11]\n\n\n\n\nInsertion Sort\n\ndef insertion_sort(arr)\n    n = arr.length\n    for i in 1...n\n        key = arr[i]\n        j = i - 1\n        while j &gt;= 0 && arr[j] &gt; key\n            arr[j + 1] = arr[j]\n            j = j - 1\n        end\n        arr[j + 1] = key\n    end\nend\n\ndef insertion_sort_desc(arr)\n    n = arr.length\n    for i in 1...n\n        key = arr[i]\n        j = i - 1\n        while j &gt;= 0 && arr[j] &lt; key\n            arr[j + 1] = arr[j]\n            j = j - 1\n        end\n        arr[j + 1] = key\n    end\nend\n\narr = [12, 11, 13, 5, 6]\ninsertion_sort(arr)\np arr\ninsertion_sort_desc(arr)\np arr\n\n[5, 6, 11, 12, 13]\n[13, 12, 11, 6, 5]\n\n\n[13, 12, 11, 6, 5]\n\n\n\n\nDepth First Search\n\nclass Graph\n    def initialize(vertices)\n        @vertices = vertices\n        @adj = Array.new(vertices) { Array.new }\n    end\n\n    def add_edge(source, destination)\n        @adj[source].push(destination)\n    end\n\n    def dfs_util(vertex, visited)\n        visited[vertex] = true\n        print vertex, \" \"\n\n        @adj[vertex].each do |v|\n            dfs_util(v, visited) unless visited[v]\n        end\n    end\n\n    def dfs(vertex)\n        visited = Array.new(@vertices, false)\n        dfs_util(vertex, visited)\n    end\nend\n\ng = Graph.new(4)\ng.add_edge(0, 1)\ng.add_edge(0, 2)\ng.add_edge(1, 2)\ng.add_edge(2, 0)\ng.add_edge(2, 3)\ng.add_edge(3, 3)\n\nputs \"Following is Depth First Traversal\"\ng.dfs(2)\n\nFollowing is Depth First Traversal\n2 0 1 3 \n\n\n[0, 3]\n\n\n\n\nLinear Search\n\ndef linear_search(array, element)\n  i = 0\n  while i &lt; array.length\n      if array[i] == element\n        return \"#{element} at index #{array.index(element)}\"\n      end\n      i+=1\n    end\n    return -1\nend\n\np linear_search([1,2], 2)\n\n\"2 at index 1\"\n\n\n\"2 at index 1\"\n\n\n\n\nBinary Search\n\ndef binary_search(n, arr)\n  middle = arr[arr.length / 2]\n  i = 0\n  j = arr.length - 1\n\n  while i &lt; j\n    if middle == n\n      return true\n    elsif middle &lt; n\n      i = middle\n      middle = i + j / 2\n    else\n      p \"Middle is greater than n\"\n      j = middle\n      p \"j: #{j}\"\n      middle = i + j / 2\n      p \"middle: #{middle}\"\n    end\n  end\n  false\nend\n\np binary_search(1, [1,3])\n\n\"Middle is greater than n\"\n\"j: 3\"\n\"middle: 1\"\ntrue\n\n\ntrue\n\n\n\n\nShell Sort\n\nclass ShellSorter\n\n  def self.sort(a = [3, 1, 2])\n    numComp = 0\n    len = a.length\n    k = len/2\n    while(k &gt; 0.0)\n      # Increment = k. We sort all k-sequences (sequences of elements\n      # k-apart) using insertion sort over all k-sequences concurrently.\n      for i in k..len-1 do\n        t = a[i]\n        j = i\n        while( (j &gt;= k) && (a[j-k] &gt; t) ) do\n          numComp += 1\n          a[j] = a[j-k]\n          j -= k\n        end\n        ++numComp\n        a[j] = t;\n      end\n      k = (k/(k == 2 ? 2 : 2.2)).floor # \"divide by 2.2\" increment sequence\n    end\n    return numComp\n  end\n\n  def self.randomArray(len = 10)\n    a = []\n    if(len&lt;0) then len = 0 end\n    for i in 0..len-1 do\n      a[i] = (rand*len).floor\n    end\n    return a;\n  end\n\n  def self.test(len = 10, show = false)\n    a = randomArray(len)\n    if(show) then puts \"  In: \" + a.join(\" \") end\n    c = sort(a)\n    if(show)\n      puts \" Out: \" + a.join(\" \")\n      puts \"comp: #{c}\"\n    end\n  end\n\nend\n\nShellSorter.test(20, true)\n\n  In: 5 6 0 19 15 11 4 1 11 18 4 14 12 11 7 1 13 17 13 15\n Out: 0 1 1 4 4 5 6 7 11 11 11 12 13 13 14 15 15 17 18 19\ncomp: 34\n\n\n\n\nBreadth First Search\n\nclass Graph\n    def initialize\n        @adj = Hash.new { |h, k| h[k] = [] }\n    end\n\n    def add_edge(u, v)\n        @adj[u] &lt;&lt; v\n        @adj[v] &lt;&lt; u\n    end\n\n    def bfs(s)\n        visited = Array.new(@adj.size, false)\n        queue = [s]\n        visited[s] = true\n\n        while !queue.empty?\n            u = queue.shift\n            puts u\n            @adj[u].each do |v|\n                if !visited[v]\n                    queue &lt;&lt; v\n                    visited[v] = true\n                end\n            end\n        end\n    end\nend\n\ng = Graph.new\ng.add_edge(0, 1)\ng.add_edge(0, 2)\ng.add_edge(1, 2)\ng.add_edge(2, 0)\ng.add_edge(2, 3)\ng.add_edge(3, 3)\n\ng.bfs(2)\n\n2\n0\n1\n3\n\n\n\n\nSelection Sort\n\ndef selection_sort(arr)\n  for i in 0..arr.length-1\n    min = i\n    for j in i+1..arr.length-1\n      if arr[j] &lt; arr[min]\n        min = j\n      end\n    end\n    if min != i\n      arr[i], arr[min] = arr[min], arr[i]\n    end\n  end\n  return arr\nend\n\ndef selection_sort_desc(arr)\n  for i in 0..arr.length-1\n    max = i\n    for j in i+1..arr.length-1\n      if arr[j] &gt; arr[max]\n        max = j\n      end\n    end\n    if max != i\n      arr[i], arr[max] = arr[max], arr[i]\n    end\n  end\n  return arr\nend\n\narr = [64, 25, 12, 22, 11]\np selection_sort(arr) # [11, 12, 22, 25, 64]\np selection_sort_desc(arr) # [64, 25, 22, 12, 11]\n\n[11, 12, 22, 25, 64]\n[64, 25, 22, 12, 11]\n\n\n[64, 25, 22, 12, 11]\n\n\n\n\nMerge Sort\n\ndef merge_sort(arr)\n  return arr if arr.length &lt;= 1\n\n  mid = arr.length / 2\n  left = merge_sort(arr[0...mid])\n  right = merge_sort(arr[mid..arr.length])\n\n  merge(left, right)\nend\n\ndef merge(left, right)\n  if left.empty?\n    right\n  elsif right.empty?\n    left\n  elsif left.first &lt; right.first\n    [left.first] + merge(left[1..left.length], right)\n  else\n    [right.first] + merge(left, right[1..right.length])\n  end\nend\n\narr = [12, 11, 13, 5, 6, 7]\np merge_sort(arr)\n\n[5, 6, 7, 11, 12, 13]\n\n\n[5, 6, 7, 11, 12, 13]"
  },
  {
    "objectID": "posts/2024-04-21/index.html",
    "href": "posts/2024-04-21/index.html",
    "title": "Statistics Terminology",
    "section": "",
    "text": "基本統計学\n\n\n平均（Mean） - データセットの中心を示す測定値。\n中央値（Median） - データセットを半分に分ける値。\n分散（Variance） - データが平均からどれだけ離れているかを示す測定値。\n標準偏差（Standard Deviation） - 分散の平方根で、データの散らばりを示す。\n相関係数（Correlation Coefficient） - 二つの変数間の線形関係の強さを示す。\n回帰分析（Regression Analysis） - 依存変数と一つまたは複数の独立変数との関係をモデル化。\nヒストグラム（Histogram） - データの分布を視覚的に表示するグラフ。\nt検定（t-test） - 二つの平均値の差の統計的有意性を評価。\nカイ二乗検定（Chi-squared Test） - カテゴリカルデータの期待値と観測値の違いを評価。\nANOVA（Analysis of Variance） - 複数のグループ間での平均値の差を評価。\n\n\n確率論\n\n\n確率変数（Random Variable）\n確率密度関数（Probability Density Function, PDF）\n累積分布関数（Cumulative Distribution Function, CDF）\n条件付き確率（Conditional Probability）\n独立性（Independence）\nベイズの定理（Bayes’ Theorem）\nマルコフ連鎖（Markov Chain）\nポアソン分布（Poisson Distribution）\n指数分布（Exponential Distribution）\n正規分布（Normal Distribution）\n\n\n確率的モデリング\n\n\nモンテカルロ法（Monte Carlo Methods）\nマルコフ連鎖モンテカルロ法（Markov Chain Monte Carlo, MCMC）\n隠れマルコフモデル（Hidden Markov Model, HMM）\nガウス過程（Gaussian Processes）\nベイジアンネットワーク（Bayesian Networks）\nランダムフォレスト（Random Forests）\nサポートベクターマシン（Support Vector Machines, SVM）\n一般化線形モデル（Generalized Linear Models, GLM）\nロジスティック回帰（Logistic Regression）\nサバイバル分析（Survival Analysis）\n\n\n時系列解析\n\n\nARIMAモデル（AutoRegressive Integrated Moving Average）\n季節性調整（Seasonal Adjustment）\nトレンド分析（Trend Analysis）\nスペクトル分析（Spectral Analysis）\nクロスコレログラム（Cross Correlogram）\nボラティリティ・モデリング（Volatility Modeling）\nカルマンフィルタ（Kalman Filter）\n波形認識（Waveform Recognition）\n時系列クラスタリング（Time Series Clustering）\n因果関係分析（Causal Analysis）\n\n\n応用統計学\n\n\n機械学習（Machine Learning）\nデータマイニング（Data Mining）\nビッグデータ分析（Big Data Analytics）\nネットワーク分析（Network Analysis）\nテキストマイニング（Text Mining）\n画像解析（Image Analysis）\n自然言語処理（Natural Language Processing, NLP）\nバイオインフォマティクス（Bioinformatics）\nクラウドソーシングデータ分析（Crowdsourcing Data Analysis）\nリアルタイムデータ処理（Real-time Data Processing）"
  },
  {
    "objectID": "posts/2023-07-23/index.html",
    "href": "posts/2023-07-23/index.html",
    "title": "数学2、指数関数、対数関数、三角関数",
    "section": "",
    "text": "require \"charty\"\nrequire \"datasets\"\nrequire \"numo/narray\"\n\nfalse\n\n\n\n{\n  charty: Charty::VERSION,\n  datasets: Datasets::VERSION,\n  numo_narray: Numo::NArray::VERSION\n}\n\n{:charty=&gt;\"0.2.12\", :datasets=&gt;\"0.1.7\", :numo_narray=&gt;\"0.9.2.1\"}\n\n\n\nCharty::Backends.use(:plotly)\n\n:plotly\n\n\n\npenguins = Datasets::Penguins.new\n\nplot = Charty.scatter_plot(data: penguins, x: :body_mass_g, y: :flipper_length_mm, color: :species)\n\n\n  \n  \n  \n  \n\n\n\n\nsin-cos-tan\n\ncharty = Charty::Plotter.new(:gruff)\n\n#&lt;Charty::Plotter:0x000000013d0dab18 @backend=#&lt;Charty::Backends::Gruff:0x000000013efb60a0 @plot=Gruff&gt;&gt;\n\n\n\ncurve = charty.curve do\n  function {|x| Math.sin(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/sin.png\")\n\n\n\n\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.cos(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/cos.png\")\n\n\n\n\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.tan(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/tan.png\")\n\n\n\n\n\n\n\n\n\n\nsqurt-log\n\ncurve = charty.curve do\n  function {|x| Math.log(x) }\n  range x: 1..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/log.png\")\n\n\n\n\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.log2(x) }\n  range x: 1..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/log2.png\")\n\n\n\n\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.log10(x) }\n  range x: 1..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/log10.png\")\n\n\n\n\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.sqrt(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/sqrt.png\")\n\n\n\n\n\n\n\n\n\ncurve = charty.curve do\n  function {|x| Math.exp(x) }\n  range x: 0..10, y: -1..1\n  xlabel 'foo'\n  ylabel 'bar'\nend\ncurve.render(\"sample_images/exp.png\")"
  },
  {
    "objectID": "posts/2023-07-13/index2.html",
    "href": "posts/2023-07-13/index2.html",
    "title": "rb_prob",
    "section": "",
    "text": "https://github.com/geeknees/rb_prob\nIt’s not ideal, but to quickly fix the ‘method missing’ issue, I’ve added the code below.\nhttps://github.com/geeknees/rb_prob/blob/master/lib/prob.rb#L251\n\nrequire 'rubygems'\nrequire 'bundler/setup'\n\nrequire 'prob'\ninclude Probably\n\n# Alarm example from \"Artificial Intelligence - A Modern Approach\" by Russel\n# and Norvig Page 493 cc.\n#\n# Suppose you have a new fairly reliable burglar alarm at home but occasionally\n# it responds to minor earthquakes. You also have two neighbors John and Mary,\n# who have promised to call you at work when they hear the alarm. John always\n# calls when he hears the alarm, but sometimes confuses the telephone ringing\n# with the alarm and calls then, too. Mary, on the other hand, is too much in\n# loud music and sometimes misses the alarm altogether.\n#\n# So the bayesian network will be:\n#\n#           B         E\n#            \\       /\n#            _\\|   |/_\n#                A\n#             /    \\\n#           |/_    _\\|\n#          J          M\n#\n#  with probabilities:\n#  P(B) = 0.001\n#  P(E) = 0.002\n#\n#  P(A| B=true, E=true)   = 0.95\n#  P(A| B=true, E=false)  = 0.94\n#  P(A| B=false, E=true)  = 0.29\n#  P(A| B=false, E=false) = 0.001\n#\n#  P(J| A=true)  = 0.9\n#  P(J| A=false) = 0.05\n#\n#  P(M| A=true)  = 0.7\n#  P(M| A=false) = 0.01\n#\n#  where B = burglar, E = earthquake, A = alarm, J = John calls and\n#  M = Mary calls\n#\n#  ----------------------------------------------------------------------------\n#\n#  Next we want to develop some 'equivalent' functions for querying that\n#  network and do some benchmarks.\n#\n\n# first let's encode the probabilities from the network\n# P(B)\nPBurglary = choose(0.001,  :B, :notB )\n\n# P(E)\nPEarthquake = choose(0.002,  :E, :notE)\n\n# P(A|B = b,E = e)\ndef p_alarm(b, e)\n    pAlarmTable = {\n        [:B, :E] =&gt; 0.95,\n        [:B, :notE] =&gt; 0.94,\n        [:notB, :E] =&gt; 0.29,\n        [:notB, :notE] =&gt; 0.001\n    }\n\n    choose(pAlarmTable[[b, e]],  :A, :notA)\nend\n\n# P(J|A = a)\ndef p_john(a)\n    choose( a == :A ? 0.9 : 0.05, :J, :notJ)\nend\n\n# P(M|A = a)\ndef p_mary(a)\n    choose( a == :A ? 0.7 : 0.01, :M, :notM)\nend\n\n# computes the joint probability and transform result using block (if given)\n# allowing to do some marginalization over one random variable by\n# \"leaving it out\"\n#\n# for example:\n# mk_joint_p {|b,e,a,j,m| [b,e,a]} will find P(b,e,a) = Sum(j,m) { P(b,e,a,j,m) }\n#\ndef mk_joint_p(&blk)\n    PBurglary.dep { |b|\n        PEarthquake.dep {|e|\n            p_alarm(b, e).dep {|a|\n                p_john(a).dep { |j|\n                    p_mary(a).dep {|m|\n                        mk_const(if blk then blk.call([b,e,a,j,m])\n                                else [b,e,a,j,m] end)\n                    }\n                }\n            }\n        }\n    }\nend\n\n# compute (optionally conditional) joint probability of (free) random\n# variables like mk_joint_p.\n#\n# To compute conditional probability set random variables to a known state.\n# for example\n# mk_joint_p2( {:john = :J, :mary = :M} )\n# will compute\n# P(B,E,A| J = true, M = true)\n#\n# or\n# mk_joint_p2({:john = :J, :mary = :M}) {|b,e,a,j,m| b} will find\n# P(B | J = true, M = true)\ndef mk_joint_p2( tsts = {}, &blk )\n    PBurglary.dep { |b|\n    condition(!tsts[:burglary] || tsts[:burglary] == b) {\n        PEarthquake.dep {|e|\n        condition(!tsts[:earthquake] || tsts[:earthquake] == e) {\n            p_alarm(b,e).dep {|a|\n            condition(!tsts[:alarm] || tsts[:alarm] == a) {\n                p_john(a).dep {|j|\n                condition(!tsts[:john] || tsts[:john] == j) {\n                    p_mary(a).dep {|m|\n                    condition(!tsts[:mary] || tsts[:mary] == m) {\n                        mk_const(if blk then blk.call [b,e,a,j,m] else [b,e,a,j,m] end)\n                    }}\n                }}\n            }}\n        }}\n    }}.normalize\nend\n\n# like mk_joint_p2, but using event_dep directly instead of mixing in\n# condition-statements\ndef mk_joint_p3 (tsts = {}, &blk)\n    tst_b = if_just tsts[:burglary]\n    tst_e = if_just tsts[:earthquake]\n    tst_a = if_just tsts[:alarm]\n    tst_j = if_just tsts[:john]\n    tst_m = if_just tsts[:mary]\n\n    PBurglary.event_dep(tst_b) {|b|\n        PEarthquake.event_dep(tst_e) {|e|\n            p_alarm(b,e).event_dep(tst_a) {|a|\n                p_john(a).event_dep(tst_j) {|j|\n                    p_mary(a).event_dep(tst_m) {|m|\n                        mk_const(if blk then blk.call [b,e,a,j,m] else [b,e,a,j,m] end)\n                    }\n                }\n            }\n        }\n    }.normalize\nend\n\n# precompute joint probability to do bayesian inference using filter, map and\n# query?\nPJoint = mk_joint_p\n\nputs 'P(B|M=true, J=true) :'\nputs mk_joint_p3({:mary =&gt; :M, :john =&gt; :J}) {|b,e,a,j,m| b }\n\n# puts \"\\njoint probability:\"\n# puts \"==================\"\n# puts PJoint\n\n# compute P(B | M=true, J=true, E=false, A=true) using all 3 different\n# functions mk_joint_p, mk_joint_p2 and mk_joint_p3:\nputs \"\\nP(B | M=true, J=true, E=false, A=true)\"\nputs \"=====================================\"\nputs mk_joint_p2({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.query?(&just(:B))\nputs mk_joint_p3({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.probability(:B)\nputs PJoint.filter {|b,e,a,j,m| e == :notE && j == :J && m == :M && a == :A }.query? {|b,e,a,j,m| b == :B }\n\n# do some benchmarking:\n\nrequire 'benchmark'\n\nBenchmark.bmbm {|x|\n    i = 1000\n    x.report('joint probability:') {\n        (1..i).each {\n            mk_joint_p.filter {|b,e,a,j,m| e == :notE && j == :J && m == :M && a == :A }.query? {|b,e,a,j,m| b == :B }\n        }\n    }\n\n    x.report('joint probability precomputed:') {\n        (1..i).each {\n            PJoint.filter {|b,e,a,j,m| e == :notE && j == :J && m == :M && a == :A}.query? {|b,e,a,j,m| b == :B}\n        }\n    }\n\n    x.report('direkt:') {\n        (1..i).each {\n            mk_joint_p {|b,e,a,j,m|\n                if e == :notE && j == :J && m == :M  && a == :A\n                    [b,a]\n                else\n                    nil\n                end\n            }.query? {|b,a| b == :B}\n        }\n    }\n\n    x.report('direkt with conditions:') {\n        (1..i).each {\n            mk_joint_p2({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.query?(&just(:B))\n        }\n    }\n\n    x.report('direkt with event condition:') {\n        (1..i).each {\n            mk_joint_p3({:mary =&gt; :M, :john =&gt; :J, :earthquake =&gt; :notE, :alarm =&gt; :A}) { |b,e,a,j,m| b }.query?(&just(:B))\n        }\n    }\n}\n\nP(B|M=true, J=true) :\nB : 28.41718353643929 %\nnotB : 71.58281646356072 %\n\nP(B | M=true, J=true, E=false, A=true)\n=====================================\n0.4847859721505931\n0.4847859721505931\n0.484785972150593\nRehearsal ------------------------------------------------------------------\njoint probability:               0.113981   0.000574   0.114555 (  0.114670)\njoint probability precomputed:   0.003608   0.000209   0.003817 (  0.003818)\ndirekt:                          0.048796   0.000252   0.049048 (  0.049137)\ndirekt with conditions:          0.015159   0.000420   0.015579 (  0.015591)\ndirekt with event condition:     0.014577   0.000215   0.014792 (  0.014786)\n--------------------------------------------------------- total: 0.197791sec\n\n                                     user     system      total        real\njoint probability:               0.108139   0.000171   0.108310 (  0.108459)\njoint probability precomputed:   0.003247   0.000047   0.003294 (  0.003271)\ndirekt:                          0.047736   0.000101   0.047837 (  0.047904)\ndirekt with conditions:          0.013683   0.000041   0.013724 (  0.013714)\ndirekt with event condition:     0.013739   0.000069   0.013808 (  0.013811)\n\n\n[#&lt;Benchmark::Tms:0x0000000123cacc30 @label=\"joint probability:\", @real=0.10845900001004338, @cstime=0.0, @cutime=0.0, @stime=0.00017100000000000448, @utime=0.10813899999999999, @total=0.10830999999999999&gt;, #&lt;Benchmark::Tms:0x000000012337b648 @label=\"joint probability precomputed:\", @real=0.0032709999941289425, @cstime=0.0, @cutime=0.0, @stime=4.700000000000537e-05, @utime=0.003247, @total=0.0032940000000000053&gt;, #&lt;Benchmark::Tms:0x00000001233bc850 @label=\"direkt:\", @real=0.047903999977279454, @cstime=0.0, @cutime=0.0, @stime=0.00010099999999998999, @utime=0.047736, @total=0.04783699999999999&gt;, #&lt;Benchmark::Tms:0x0000000123caf1b0 @label=\"direkt with conditions:\", @real=0.013714000000618398, @cstime=0.0, @cutime=0.0, @stime=4.099999999999937e-05, @utime=0.013683, @total=0.013724&gt;, #&lt;Benchmark::Tms:0x0000000123caf160 @label=\"direkt with event condition:\", @real=0.013810999982524663, @cstime=0.0, @cutime=0.0, @stime=6.899999999999962e-05, @utime=0.013739000000000057, @total=0.013808000000000056&gt;]"
  },
  {
    "objectID": "posts/2023-07-14/index.html",
    "href": "posts/2023-07-14/index.html",
    "title": "Daru",
    "section": "",
    "text": "https://github.com/SciRuby/daru\nTo plot the graph, it is necessary to add gem ‘daru-view’.\nIt also requires adding gem ‘matrics’. After the PR below is merged, it will be resolved. https://github.com/SciRuby/daru/pull/541\n\nrequire 'bundler/setup'\nrequire 'daru'\n\ntrue\n\n\n\ndf = Daru::DataFrame.new({\n    a: Array.new(100) {|i| i},\n    b: 100.times.map{rand}\n  })\n  df.plot type: :scatter, x: :a, y: :b\n\n\n\n\n\n\ndf = Daru::DataFrame.new({\n    :temperature =&gt; [30.4, 23.5, 44.5, 20.3, 34, 24, 31.45, 28.34, 37, 24],\n    :sales       =&gt; [350, 150, 500, 200, 480, 250, 330, 400, 420, 560],\n    :city        =&gt; ['Pune', 'Delhi']*5,\n    :staff       =&gt; [15,20]*5\n    })\n  df\n\n\n Daru::DataFrame(10x4) \n\n\n\n\n\ntemperature\nsales\ncity\nstaff\n\n\n\n\n0\n30.4\n350\nPune\n15\n\n\n1\n23.5\n150\nDelhi\n20\n\n\n2\n44.5\n500\nPune\n15\n\n\n3\n20.3\n200\nDelhi\n20\n\n\n4\n34\n480\nPune\n15\n\n\n5\n24\n250\nDelhi\n20\n\n\n6\n31.45\n330\nPune\n15\n\n\n7\n28.34\n400\nDelhi\n20\n\n\n8\n37\n420\nPune\n15\n\n\n9\n24\n560\nDelhi\n20\n\n\n\n\n\n\n\ndf.plot(type: :scatter, x: :temperature, y: :sales) do |plot, diagram|\n    plot.x_label \"Temperature\"\n    plot.y_label \"Sales\"\n    plot.yrange [100, 600]\n    plot.xrange [15, 50]\n    diagram.tooltip_contents([:city, :staff])\n    diagram.color(Nyaplot::Colors.qual) # set the color scheme for this diagram. See Nyaplot::Colors for more info.\n    diagram.fill_by(:city) # Change color of each point WRT to the city that it belongs to.\n    diagram.shape_by(:city) # Shape each point WRT to the city that it belongs to.\n  end"
  },
  {
    "objectID": "posts/2023-07-13/index.html",
    "href": "posts/2023-07-13/index.html",
    "title": "Introduction to Modeling in Gen",
    "section": "",
    "text": "https://www.gen.dev/tutorials/intro-to-modeling/tutorial"
  },
  {
    "objectID": "posts/2023-07-13/index.html#bayesian-linear-regressioncrypto",
    "href": "posts/2023-07-13/index.html#bayesian-linear-regressioncrypto",
    "title": "Introduction to Modeling in Gen",
    "section": "Bayesian linear regressioncrypto,",
    "text": "Bayesian linear regressioncrypto,\n\n@gen function line_model(xs::Vector{Float64})\n    # We begin by sampling a slope and intercept for the line.\n    # Before we have seen the data, we don't know the values of\n    # these parameters, so we treat them as random choices. The\n    # distributions they are drawn from represent our prior beliefs\n    # about the parameters: in this case, that neither the slope nor the\n    # intercept will be more than a couple points away from 0.\n    slope = ({:slope} ~ normal(0, 1))\n    intercept = ({:intercept} ~ normal(0, 2))\n\n    # We define a function to compute y for a given x\n    function y(x)\n        return slope * x + intercept\n    end\n\n    # Given the slope and intercept, we can sample y coordinates\n    # for each of the x coordinates in our input vector.\n    for (i, x) in enumerate(xs)\n        # Note that we name each random choice in this loop\n        # slightly differently: the first time through,\n        # the name (:y, 1) will be used, then (:y, 2) for\n        # the second point, and so on.\n        ({(:y, i)} ~ normal(y(x), 0.1))\n    end\n\n    # Most of the time, we don't care about the return\n    # value of a model, only the random choices it makes.\n    # It can sometimems be useful to return something\n    # meaningful, however; here, we return the function `y`.\n    return y\nend;\n\n\nxs = [-5., -4., -3., -2., -1., 0., 1., 2., 3., 4., 5.];\n\n\ny = line_model(xs)\n\ny (generic function with 1 method)\n\n\n\ntrace = Gen.simulate(line_model, (xs,));\n\n\nGen.get_args(trace)\n\n([-5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0],)\n\n\n\nfunction render_trace(trace; show_data=true)\n\n    # Pull out xs from the trace\n    xs, = get_args(trace)\n\n    xmin = minimum(xs)\n    xmax = maximum(xs)\n\n    # Pull out the return value, useful for plotting\n    y = get_retval(trace)\n\n    # Draw the line\n    test_xs = collect(range(-5, stop=5, length=1000))\n    fig = plot(test_xs, map(y, test_xs), color=\"black\", alpha=0.5, label=nothing,\n                xlim=(xmin, xmax), ylim=(xmin, xmax))\n\n    if show_data\n        ys = [trace[(:y, i)] for i=1:length(xs)]\n\n        # Plot the data set\n        scatter!(xs, ys, c=\"black\", label=nothing)\n    end\n\n    return fig\nend;\n\n\nrender_trace(trace)\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction grid(renderer::Function, traces)\n    Plots.plot(map(renderer, traces)...)\nend;\n\n\ntraces = [Gen.simulate(line_model, (xs,)) for _=1:12]\ngrid(render_trace, traces)"
  },
  {
    "objectID": "posts/2023-08-08/index.html",
    "href": "posts/2023-08-08/index.html",
    "title": "langchainrb 2",
    "section": "",
    "text": "require 'bundler/setup'\nrequire \"langchain\"\n\nthread = Langchain::Thread.new\nassistant = Langchain::Assistant.new(\n  llm: Langchain::LLM::OpenAI.new(api_key: ENV[\"OPENAI_API_KEY\"]),\n  thread: thread,\n  tools: [\n    Langchain::Tool::GoogleSearch.new(api_key: ENV[\"SERPAPI_API_KEY\"]),\n    Langchain::Tool::Calculator.new\n    ]\n)\n\nassistant.add_message_and_run(content: \"How many full soccer fields would be needed to cover the distance between NYC and DC in a straight line?\", auto_tool_execution: true)\nassistant.thread.messages.last.content\n\nI, [2024-04-25T23:01:57.152109 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:01:58.476055 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::GoogleSearch]: Executing \"distance between NYC and DC in miles\"\nI, [2024-04-25T23:01:58.670410 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:03.179314 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::GoogleSearch]: Executing \"coordinates of New York City\"\nI, [2024-04-25T23:02:03.302254 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::GoogleSearch]: Executing \"coordinates of Washington D.C.\"\nI, [2024-04-25T23:02:03.406316 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:05.226543 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::GoogleSearch]: Executing \"distance between 40.7128° N, 74.0060° W and 38.9072° N, 77.0369° W\"\nI, [2024-04-25T23:02:05.318653 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:07.928577 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::Calculator]: Executing \"203 miles * 1760 yards/mile / 100 yards\"\nI, [2024-04-25T23:02:07.931278 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:10.167832 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::Calculator]: Executing \"203 miles * 1760 yards / 100 yards\"\nI, [2024-04-25T23:02:10.176856 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:12.046014 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::Calculator]: Executing \"203 miles * 1760 yards / 100\"\nI, [2024-04-25T23:02:12.046893 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:13.884682 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::Calculator]: Executing \"203 miles * 1760 yards\"\nI, [2024-04-25T23:02:13.888773 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\n\n\n\"The distance between New York City and Washington D.C. is approximately 203 miles. To cover this distance in a straight line with soccer fields, we would need approximately 356 soccer fields.\"\n\n\n\nthread = Langchain::Thread.new\n\nassistant = Langchain::Assistant.new(\n  llm: Langchain::LLM::OpenAI.new(api_key: ENV[\"OPENAI_API_KEY\"]),\n  thread: thread,\n  tools: [\n    Langchain::Tool::GoogleSearch.new(api_key: ENV[\"SERPAPI_API_KEY\"]),\n    Langchain::Tool::Calculator.new,\n    # Langchain::Tool::RubyCodeInterpreter.new,\n    Langchain::Tool::Weather.new(api_key: ENV[\"OPEN_WEATHER_API_KEY\"]),\n    Langchain::Tool::Wikipedia.new\n    ]\n)\n\nassistant.add_message_and_run(content:  \"明日の東京の天気は？\", auto_tool_execution: true)\nassistant.thread.messages.last.content\n\nI, [2024-04-25T23:02:15.479595 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:16.331624 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::Weather]: Executing for \"Tokyo, Japan\"\nI, [2024-04-25T23:02:16.869189 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\n\n\n\"明日の東京の天気は、気温が約29.3度で、湿度は73%です。\"\n\n\n\nassistant.add_message_and_run(content:  \"聖徳太子の生涯について要約して\", auto_tool_execution: true)\nassistant.thread.messages.last.content\n\nI, [2024-04-25T23:02:18.137505 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:19.030074 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::Wikipedia]: Executing \"Prince Shotoku\"\nI, [2024-04-25T23:02:20.475130 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\n\n\n\"聖徳太子（Shōtoku Taishi）は、日本の飛鳥時代に活躍した半伝説的な摂政であり、推古天皇の下で政治家として奉仕しました。彼は、推古天皇とその妃である穴穂部間人皇女の間に生まれました。彼は日本の政府行政の近代化や仏教の普及を推進したことで知られています。また、彼の周りには、日本や皇室、仏教の保護のために聖徳太子を崇拝する信仰が生まれました。\"\n\n\n\nassistant.add_message_and_run(content:  \"rubyでランダムな数字の配列を作ってください\", auto_tool_execution: true)\nassistant.thread.messages.last.content\n\nI, [2024-04-25T23:02:25.367592 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:02:26.394224 #28323]  INFO -- : [Langchain.rb] [Langchain::Tool::Calculator]: Executing \"Array.new(5) { rand(1..10) }\"\nI, [2024-04-25T23:02:26.398501 #28323]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\n\n\n\"申し訳ありません、計算機で直接ランダムな数字の配列を生成することはできません。代わりに、Rubyのコードを使用してランダムな数字の配列を生成する方法を示します。\\n\\n```ruby\\n# ランダムな数字の配列を生成する\\nrandom_array = Array.new(5) { rand(1..10) }\\nputs random_array\\n```\\n\\nこのRubyコードを実行すると、5つの要素からなるランダムな数字の配列が生成されます。\""
  },
  {
    "objectID": "posts/2023-07-15/index.html",
    "href": "posts/2023-07-15/index.html",
    "title": "langchainrb",
    "section": "",
    "text": "https://github.com/andreibondarev/langchainrb\n\np ENV['RUBYINSPECT']\n\n\"1\"\n\n\n\"1\"\n\n\n\nrequire 'bundler/setup'\nrequire 'langchain'\n\nllm = Langchain::LLM::OpenAI.new(api_key: ENV[\"OPENAI_API_KEY\"])\nllm.chat(messages: [{role: \"user\", content: \"What is the meaning of life?\"}]).completion\n\n\"The meaning of life is a deeply philosophical question that has been debated by scholars, theologians, and individuals for centuries. Different people and cultures have different beliefs and interpretations of the meaning of life. Some believe that the meaning of life is to seek happiness and fulfillment, others believe it is to fulfill a higher purpose or destiny, while others believe that life has no inherent meaning and it is up to each individual to create their own meaning. Ultimately, the meaning of life is a deeply personal and subjective question that each person must grapple with and find their own answer to.\""
  },
  {
    "objectID": "posts/2023-07-30/index.html",
    "href": "posts/2023-07-30/index.html",
    "title": "2進数、連立方程式",
    "section": "",
    "text": "2進数\n\ndef decimal_to_binary(target)\n  remainders = []   # List to store remainders\n\n  # Until the quotient becomes 0 during division\n  while target != 0\n    remainders &lt;&lt; target % 2   # Remainder\n    target = target / 2   # Quotient\n  end\n\n  remainders.reverse()   # Reverse the elements in the list\nend\n\n:decimal_to_binary\n\n\n\np decimal_to_binary(65)\n\n[1, 0, 0, 0, 0, 0, 1]\n\n\n[1, 0, 0, 0, 0, 0, 1]\n\n\n\ndef binary_to_decial(target)\n  raise ArgumentError if target.to_s =~ /[^01]/\n  target\n    .digits\n    .each_with_index\n    .sum { |digit, index| digit * 2**index }\nend\n\n:binary_to_decial\n\n\n\np binary_to_decial(1001)\n\n9\n\n\n9\n\n\n\n\n連立方程式\n\nrequire \"charty\"\nrequire \"datasets\"\nrequire \"numo/narray\"\n\nfalse\n\n\n\ncharty = Charty::Plotter.new(:gruff)\n\n#&lt;Charty::Plotter:0x00000001206c2458 @backend=#&lt;Charty::Backends::Gruff:0x0000000121247a58 @plot=Gruff&gt;&gt;\n\n\n\\[\ny = -2/3 x + 6\n\\] \\[\ny = 1/2 x + 2\n\\]\n\nscatter = charty.scatter do\n  series -10..10, (-10..10).map{|x| x/2.to_f * -3 + 6 }, label: 'sample1'\n  series -10..10, (-10..10).map{|x| (x/2.to_f) + 2 }, label: 'sample2'\n  range x: -10..10, y: -10..10\n  xlabel 'x'\n  ylabel 'y'\nend\nscatter.render(\"sample_images/1.png\")\n\n\n\n\n\n\n\n\n\\[\n2/3 x + y = 6\n\\] \\[\n-1/2 x + y = 2\n\\]\n\nrequire 'matrix'\n\na = Matrix[[2/3.to_f, 1],[-1/2.to_f, 1]]\nb = Vector[6,2]\na.lup.solve(b)\n\nVector[3.4285714285714284, 3.7142857142857144]\n\n\n\n\\[\ny = - 1/2x + 1/2\n\\] \\[\ny = -1/3 x\n\\]\n\nscatter = charty.scatter do\n  series -10..10, (-10..10).map{|x| x/-2.to_f + 1/2.to_f }, label: 'sample1'\n  series -10..10, (-10..10).map{|x| (x/-3.to_f)}, label: 'sample2'\n  range x: -10..10, y: -10..10\n  xlabel 'x'\n  ylabel 'y'\nend\nscatter.render(\"sample_images/2.png\")\n\n\n\n\n\n\n\n\n\\[\nx + 2y = 1\n\\] \\[\nx + 3y = 0\n\\]\n\nrequire 'matrix'\n\na = Matrix[[1.0, 2.0],[1.0, 3.0]]\nb = Vector[1.0, 0.0]\na.lup.solve(b)\n\nVector[3.0, -1.0]\n\n\n\\[\nx = 3, y = -1\n\\]\n\n\\(2x + 4y - 2z = 4\\)\n\\(2x + y + z = 7\\)\n\\(x + y + z = 6\\)\n\nrequire 'matrix'\n\na = Matrix[[2, 4, -2],[2, 1, 1],[1, 1, 1]]\nb = Vector[4,7,6]\na.lup.solve(b)\n\nVector[(1/1), (2/1), (3/1)]\n\n\n\\[\nx = 1, y = 2, z = 3\n\\]"
  },
  {
    "objectID": "posts/2023-08-05/index.html",
    "href": "posts/2023-08-05/index.html",
    "title": "openai functions and embeddings",
    "section": "",
    "text": "require \"openai\"\n\nOpenAI.configure do |config|\n  config.access_token = ENV.fetch('OPENAI_ACCESS_TOKEN', nil)\nend\n\nclient = OpenAI::Client.new\n\nresponse = client.chat(\n    parameters: {\n        model: \"gpt-3.5-turbo\", # Required.\n        messages: [{ role: \"user\", content: \"Hello!\"}], # Required.\n        temperature: 0.7,\n    })\nputs response.dig(\"choices\", 0, \"message\", \"content\")\n\nHello! How can I assist you today?"
  },
  {
    "objectID": "posts/2023-08-05/index.html#basic",
    "href": "posts/2023-08-05/index.html#basic",
    "title": "openai functions and embeddings",
    "section": "",
    "text": "require \"openai\"\n\nOpenAI.configure do |config|\n  config.access_token = ENV.fetch('OPENAI_ACCESS_TOKEN', nil)\nend\n\nclient = OpenAI::Client.new\n\nresponse = client.chat(\n    parameters: {\n        model: \"gpt-3.5-turbo\", # Required.\n        messages: [{ role: \"user\", content: \"Hello!\"}], # Required.\n        temperature: 0.7,\n    })\nputs response.dig(\"choices\", 0, \"message\", \"content\")\n\nHello! How can I assist you today?"
  },
  {
    "objectID": "posts/2023-08-05/index.html#functions",
    "href": "posts/2023-08-05/index.html#functions",
    "title": "openai functions and embeddings",
    "section": "Functions",
    "text": "Functions\n\ndef get_current_weather(location:, unit: \"fahrenheit\")\n  puts \"#{location}, #{unit}\"\n  # use a weather api to fetch weather\nend\n\nresponse =\n  client.chat(\n    parameters: {\n      model: \"gpt-3.5-turbo-0613\",\n      messages: [\n        {\n          \"role\": \"user\",\n          \"content\": \"What is the weather like in San Francisco?\",\n        },\n      ],\n      functions: [\n        {\n          name: \"get_current_weather\",\n          description: \"Get the current weather in a given location\",\n          parameters: {\n            type: :object,\n            properties: {\n              location: {\n                type: :string,\n                description: \"The city and state, e.g. San Francisco, CA\",\n              },\n              unit: {\n                type: \"string\",\n                enum: %w[celsius fahrenheit],\n              },\n            },\n            required: [\"location\"],\n          },\n        },\n      ],\n    },\n  )\n\nmessage = response.dig(\"choices\", 0, \"message\")\n\nputs message\n\nif message[\"role\"] == \"assistant\" && message[\"function_call\"]\n  function_name = message.dig(\"function_call\", \"name\")\n  args =\n    JSON.parse(\n      message.dig(\"function_call\", \"arguments\"),\n      { symbolize_names: true },\n    )\n\n  case function_name\n  when \"get_current_weather\"\n    get_current_weather(**args)\n  end\nend\n\n{\"role\"=&gt;\"assistant\", \"content\"=&gt;nil, \"function_call\"=&gt;{\"name\"=&gt;\"get_current_weather\", \"arguments\"=&gt;\"{\\n  \\\"location\\\": \\\"San Francisco, CA\\\"\\n}\"}}\nSan Francisco, CA, fahrenheit"
  },
  {
    "objectID": "posts/2023-08-05/index.html#embeddings",
    "href": "posts/2023-08-05/index.html#embeddings",
    "title": "openai functions and embeddings",
    "section": "Embeddings",
    "text": "Embeddings\n\nresponse = client.embeddings(\n    parameters: {\n        model: \"text-embedding-ada-002\",\n        input: \"The king is naked, the king's ears are donkey ears...\"\n    }\n)\n\nputs response.dig(\"data\", 0, \"embedding\")\n\n-0.004684245\n-0.015983792\n0.0054681394\n-0.008597342\n-0.0027388495\n0.016506387\n-0.024128642\n-0.022356914\n-0.0053438633\n-0.011267681\n0.0032662253\n-0.000123778\n0.0257984\n-0.014161078\n-0.0064049885\n0.015665136\n0.021298977\n0.008731178\n0.022216706\n-0.0008492186\n-0.008132105\n0.0003077023\n-0.024485538\n0.008323298\n0.01751334\n-0.008463507\n0.014760152\n-0.010483786\n0.014441496\n-0.014938599\n0.001453072\n0.007921792\n-0.0005174179\n-0.009546937\n-0.028067231\n0.0050889384\n0.0011957572\n-0.016366178\n0.027710337\n-0.009827355\n-0.010929905\n0.005442647\n0.0012555051\n0.0033076506\n-0.02671613\n0.009196416\n0.014071855\n-0.037321005\n-0.0020824177\n0.013396304\n0.01210256\n-0.0059652426\n-0.0061564366\n0.0041680224\n-0.014352272\n0.017844744\n-0.01751334\n-0.0022289997\n0.0034319265\n-0.0057421834\n0.008845895\n-0.0033203969\n0.0033650089\n-0.009585177\n-0.008520865\n-0.020113574\n0.0034255534\n-0.008495373\n-0.016876029\n0.002542876\n0.048792627\n0.012746246\n-0.026945563\n-0.030540004\n0.019578233\n0.00013831668\n-0.021197006\n0.01904289\n0.00998031\n0.0005098498\n0.010917159\n-0.040864464\n-0.01775552\n0.023096196\n0.017577073\n0.006408175\n8.190458e-06\n0.025887623\n0.011567217\n-0.023363868\n-0.0069275843\n0.00095517177\n0.022828525\n0.0049805953\n-0.03724453\n0.0053279307\n0.0043018577\n0.016315194\n-0.005442647\n-0.014365018\n0.0066662864\n0.0035912546\n-0.006408175\n-0.0029794348\n-0.01150986\n0.0067363908\n-0.007169763\n-0.005222774\n-0.008240447\n-0.014964092\n0.013383557\n0.02400118\n0.031661674\n-0.05455393\n-0.0010212929\n-0.024625747\n0.023822732\n0.0010380223\n-0.019017398\n-0.042011626\n0.02793977\n0.016353432\n-0.008788536\n-0.008737551\n0.0123511115\n0.010088653\n-0.02481694\n-0.02610431\n-0.0302086\n-0.0061851153\n0.043031324\n-0.0017605751\n0.011930485\n0.025314042\n-0.008151224\n-0.0009304759\n-0.007800702\n0.021005813\n0.012574171\n2.5361792e-06\n0.0072398675\n0.0151425395\n-0.008412522\n-0.0013630516\n0.001827493\n0.023274643\n0.0051462967\n0.012860961\n0.0051367367\n-0.0026639653\n0.013829676\n-0.009323878\n0.042903863\n-0.036607217\n0.017933967\n0.009954818\n-0.014314033\n0.021171514\n0.005774049\n-0.01008228\n0.0017669483\n0.0332677\n0.01089804\n-0.013243349\n0.025466997\n0.029851707\n0.01657012\n0.012860961\n0.0033458893\n0.011764784\n0.01704173\n0.01330708\n-0.00857185\n0.021770587\n0.007966403\n0.025721923\n-5.6480553e-06\n0.009323878\n-0.0051462967\n0.0018928174\n-0.045886483\n0.01177753\n0.011006383\n0.024256105\n-0.0070423004\n0.007838941\n-0.008310552\n-0.019272324\n0.0012331993\n0.0021381828\n0.01785749\n0.006589809\n-0.020011606\n-0.0076095085\n-0.66321266\n-0.004789402\n-0.010362698\n0.012064321\n0.014301287\n-0.0024887044\n-0.004588648\n0.0048467596\n-0.023134435\n-0.0056179077\n-0.007998269\n0.005302438\n0.02077638\n-0.009068954\n-0.01785749\n-0.0134727815\n0.0039927615\n-0.019705696\n0.014607197\n0.0032566658\n-0.007533031\n-0.008189462\n0.012274634\n0.0034542324\n0.004352843\n-0.0023532754\n0.02426885\n0.016442657\n-0.018125162\n-0.0010682946\n-0.039079987\n0.0031531025\n0.009903832\n0.010636741\n0.04318428\n-0.012338365\n-0.018303609\n0.018431071\n0.0030702518\n0.03038705\n-0.018902682\n0.0023373428\n0.009304759\n-0.020789126\n-0.014237556\n0.01261241\n0.020559693\n-0.01571612\n-0.010024922\n0.0033427028\n-8.5788204e-05\n0.014352272\n-0.0017972206\n0.019093875\n-0.036913127\n0.0061118244\n0.029851707\n0.0046045813\n-0.0012610817\n0.009151804\n-0.00029814264\n-0.0020744514\n-0.02844962\n0.011866754\n0.0002509417\n0.016761312\n-0.010636741\n0.02416688\n0.008966983\n-0.026486699\n0.015129793\n0.013804183\n0.004588648\n0.015767105\n-0.0043018577\n0.025568968\n0.0006038534\n-0.017882982\n-0.0090052225\n0.0018944107\n-0.01361299\n0.0213882\n-0.022522615\n0.010541145\n0.016251463\n-0.0071060318\n-0.016621104\n0.0064623463\n0.011356904\n-0.013536513\n0.0015821276\n0.022752048\n0.002859939\n0.0032104605\n0.019705696\n0.010216116\n-0.015435703\n0.023873717\n0.0020457723\n-0.022344168\n0.002498264\n-0.02328739\n-0.024740461\n-0.0047479765\n0.034848236\n0.03171266\n-0.02576016\n0.0125423055\n0.054400973\n-0.013982631\n-0.003298091\n0.019119367\n0.006506958\n0.01602203\n0.012319246\n-0.028322157\n0.0181634\n0.0042094477\n0.01975668\n-0.008068373\n0.016582865\n0.022318676\n0.023784494\n-0.03285982\n-0.0016124\n0.029953677\n-0.02855159\n-0.022458885\n-0.029137917\n0.0021636751\n0.010241608\n-0.007807075\n0.015537673\n-0.0076222545\n0.025721923\n-0.00525464\n0.02926538\n-0.0011758411\n0.021069543\n-0.023159927\n-0.00015823268\n0.007590389\n0.00896061\n0.005598788\n-0.004888185\n-0.030106632\n-0.018137908\n-0.016774058\n-0.0075967624\n0.01863501\n-0.02539052\n-0.008807655\n-0.010139639\n-0.021987272\n0.02528855\n0.013638482\n-0.030106632\n-0.009929325\n-0.015805345\n-0.006433667\n0.028067231\n0.019119367\n-0.0536362\n-0.009088073\n-0.00046961947\n-0.0063508167\n0.015971046\n0.02630825\n-0.009993056\n-0.037626915\n0.0002589081\n-0.0130903935\n0.012790857\n0.012510439\n-0.027098518\n-0.005780422\n0.0043751486\n-0.036479753\n-0.014008123\n0.015117046\n-0.0050761923\n0.008304179\n-0.020317515\n-0.011662815\n0.0268181\n0.001794034\n-0.0071060318\n-0.0105029065\n-0.026461205\n0.006615301\n-0.042292044\n-0.007443807\n-0.012440335\n-0.00026010306\n0.03255391\n-0.0028806515\n0.0033108373\n0.021987272\n0.03069296\n0.031381257\n0.0020362127\n-0.01291832\n0.012809977\n0.0034446728\n0.010279846\n-0.024026671\n-0.0021095036\n-0.0074947923\n0.014645436\n-0.0011503487\n0.0047925883\n-0.011191203\n0.0128992\n0.008336045\n0.0042094477\n0.033701073\n-0.00028898127\n-0.001291354\n-0.0048690657\n-0.0033905013\n0.00082053954\n-0.0024568387\n-0.007635001\n0.011522606\n-0.016149493\n0.0075967624\n0.0012945406\n0.016073015\n-0.01608576\n-0.03410895\n-0.008871387\n-0.007953657\n0.011159338\n-0.006318951\n-0.017742774\n0.005417154\n0.013829676\n0.002139776\n0.0134727815\n-0.0025954542\n-0.018074175\n0.032681372\n0.0015550419\n0.013765945\n0.009725385\n0.006216981\n0.011433382\n0.02267557\n-0.004183955\n-0.006863853\n0.0149513455\n-0.013944392\n-0.014275795\n-0.009578804\n0.022548107\n-0.024332583\n0.018176146\n0.008323298\n0.010713219\n0.029290872\n0.016876029\n-0.01210256\n0.008826775\n-0.0019549553\n0.04807884\n-0.003406434\n0.0033363297\n-0.004607768\n-0.0051462967\n0.015040569\n0.0027739017\n0.019170353\n0.012829096\n-0.0065770624\n0.0011702647\n0.029902691\n-0.003922657\n0.002299104\n0.01775552\n0.019807665\n0.009546937\n-0.034873728\n0.023121689\n0.0095724305\n-0.0015685848\n-0.016315194\n-0.023567807\n0.011038248\n-0.03204406\n0.04739054\n-0.009502326\n0.026971055\n0.013969885\n-0.0048849983\n0.001240369\n-0.02630825\n0.01761531\n-0.00018920208\n0.013115887\n-0.009922952\n0.007284479\n-0.0024313463\n-0.00017834785\n0.0056402134\n0.01928507\n-0.0028424128\n-0.015129793\n-0.008304179\n0.012975678\n-0.014071855\n-0.011720172\n0.010585757\n0.01320511\n-0.008890506\n0.0077242246\n0.018558534\n-0.026231773\n-0.01110198\n0.033089254\n0.015983792\n-0.017322147\n-0.018150654\n0.0012355892\n0.017296655\n0.10513103\n-0.008622834\n0.008597342\n0.019973366\n0.037932824\n-0.00033797466\n-0.022943242\n-0.027149502\n-0.0035689487\n0.0090115955\n-0.0054139677\n-0.0013455255\n0.005732624\n0.010878921\n0.026040578\n-0.02006259\n-0.013931646\n-0.015168032\n-0.005767676\n-0.0007683596\n-0.034873728\n0.006863853\n-0.0048754388\n0.018086921\n-0.019157607\n-0.0268181\n0.0026496258\n0.030438034\n-0.008610088\n-0.02077638\n0.009355744\n0.0015088368\n0.005018834\n0.00075402006\n-0.0077305976\n-0.0053789155\n-0.006028974\n0.013791437\n0.00936849\n-0.016774058\n0.009604296\n0.003355449\n0.00645916\n-0.027812308\n0.02702204\n-0.012089814\n-0.015894568\n0.017640803\n-0.019680202\n-0.007807075\n0.039768286\n-0.0034956578\n0.006608928\n-0.017130954\n0.033701073\n0.017500594\n-0.0071506435\n0.007915419\n-0.00066240644\n0.018367339\n-0.011860381\n-0.007832568\n-0.00065523665\n-0.0004990952\n-0.016774058\n-0.013166871\n-0.030896898\n0.009578804\n-0.04124685\n0.014925853\n-0.0037155305\n-0.010853427\n-0.023708016\n0.0039991345\n-0.011841262\n0.004626887\n0.00796003\n-0.013727706\n0.0013112699\n0.0045089843\n0.004808521\n-0.0058377804\n-0.017640803\n-0.01663385\n-0.027353443\n0.01179665\n0.005417154\n0.011006383\n-0.04626887\n-0.0023644285\n0.012969305\n0.017220177\n0.0033076506\n-0.009037088\n0.005200468\n-0.024383567\n0.0041329702\n0.0019485822\n-0.0042476864\n-0.003361822\n0.006216981\n-0.021694109\n0.00493917\n-0.0008930338\n0.026563175\n-0.016888775\n-0.004881812\n-0.00040449412\n-0.02179608\n-0.0012841842\n-0.012943812\n-0.000594692\n-0.034465846\n-0.014352272\n-0.0054362738\n0.005006088\n0.017296655\n0.016468149\n0.009457714\n0.009311132\n-0.0038111273\n-0.023274643\n0.023567807\n0.037295513\n-0.0030463526\n0.02824568\n0.0024871111\n-0.020916589\n-0.01924683\n0.008112985\n0.001946989\n-0.00068311905\n-0.0041457163\n-0.020355754\n-0.022076497\n0.006704525\n-0.016174985\n0.004046933\n-0.025454251\n-0.004486678\n-0.017271163\n-0.022879511\n0.0010882107\n-0.03214603\n-0.023096196\n-0.017933967\n0.0118030235\n-0.007182509\n-0.03252842\n0.016914267\n-0.024358075\n0.0018800711\n-0.0043177907\n0.0080747465\n0.0131031405\n-0.039589837\n-0.022892257\n-0.005716691\n0.017806504\n0.007909046\n0.03755044\n0.01008228\n0.03316573\n0.008845895\n-0.015728867\n-0.011203949\n-0.008590969\n-0.015983792\n-0.049175013\n0.00051462965\n0.006819241\n0.026333742\n0.00987834\n0.025084611\n-0.0008149631\n0.014543466\n0.011465248\n-0.0095660575\n-0.023759002\n-0.01422481\n-0.0042891116\n-0.034363877\n0.004279552\n0.0013120666\n0.008520865\n-0.0049551027\n0.044943262\n0.0015534486\n-0.005834594\n-0.022216706\n0.0043337233\n-0.026040578\n0.029749736\n0.0011208729\n0.003776075\n0.0045663426\n0.0053852885\n0.015601404\n-0.0035721352\n0.0058728326\n0.011637322\n0.011452502\n-0.00928564\n0.010222489\n-0.01667209\n0.029214393\n-0.01442875\n-0.0029762483\n0.011720172\n-0.034542326\n-0.0010364291\n-0.03999772\n-0.020151814\n-0.047135614\n-0.014084601\n0.003954523\n-0.009476833\n0.0010858207\n-0.0074629267\n-0.0312283\n-0.005544617\n0.0055956016\n0.035485547\n-0.012331992\n0.017181939\n-0.0010428022\n-0.029877199\n-0.026078818\n0.02712401\n0.005085752\n-0.018303609\n0.0027978008\n-0.0040724254\n-0.0022114736\n-0.0016179765\n0.02379724\n0.008093866\n-0.017538834\n-0.015537673\n0.008431641\n-0.0029268565\n-0.007539404\n-0.0036581724\n-0.008915999\n0.009814609\n0.018341847\n-0.024090404\n-0.025670938\n-0.03143224\n-0.011197576\n-0.024740461\n0.00034892847\n-0.02250987\n-0.002593861\n-0.0030447594\n-0.014619944\n0.010700473\n-0.018749727\n-0.012523186\n0.007813448\n-0.017130954\n0.005812288\n-0.0027547823\n0.014594451\n0.009521445\n-0.0183291\n0.010917159\n-0.012312873\n-0.012790857\n0.027582875\n-0.0015096334\n0.0068765995\n0.012829096\n0.012555052\n0.019986112\n0.022191213\n-0.0041584624\n-0.0033012775\n0.0039385897\n-0.018086921\n0.007641374\n-0.0029650952\n-0.023924703\n-0.0025524355\n-0.0045312904\n-0.008648328\n-0.017959459\n-0.0030463526\n0.018864444\n-0.028194694\n-0.012688887\n0.020508708\n0.0062137945\n0.010464667\n0.016952505\n0.020954827\n0.009840101\n0.012778111\n-0.008527238\n-0.00020274497\n-0.017628057\n0.011229442\n-0.022854017\n-0.005796355\n0.033930507\n-0.025365029\n0.025059119\n-0.04002321\n-0.019603726\n-0.017933967\n0.004343283\n0.0026480325\n0.0006795342\n-0.010636741\n-0.0011543318\n0.0052036545\n0.01561415\n-0.0021509288\n-0.036709186\n0.029061439\n0.02189805\n-0.021298977\n0.025543476\n-0.018214384\n-0.012867334\n0.018303609\n0.0014116466\n0.03329319\n-0.037295513\n0.0013534919\n-0.032732356\n0.02512285\n-0.0063603763\n-0.02651219\n-0.003065472\n-0.004802148\n-0.008227701\n0.020406738\n-0.012765365\n-0.0067937486\n0.025581714\n0.017870236\n0.019807665\n0.016047522\n-0.00016898733\n-0.002526943\n-0.0049296105\n-0.016927013\n-0.03706608\n-0.025709176\n-0.017028984\n0.03469528\n-0.010050414\n-0.016761312\n-0.0118030235\n0.01608576\n-0.018647756\n-0.0025460625\n-0.007539404\n0.02949481\n0.016608357\n0.011427009\n0.006258406\n0.023911957\n0.009973937\n-0.0095724305\n-0.02957129\n-0.012657021\n-0.0016490455\n-0.018584026\n-0.0044834916\n0.0039449628\n-0.024613\n0.013676722\n0.010764204\n-0.00796003\n0.01008228\n0.029188901\n-0.007125151\n-0.008750297\n0.009610669\n0.00999943\n0.016378924\n0.0071952553\n-0.016774058\n-0.02732795\n-0.011739292\n0.012625156\n0.030641973\n-0.047849406\n0.007271733\n0.0080747465\n-0.013638482\n0.0029364163\n-0.021056797\n-0.004046933\n0.013562005\n-0.0065515703\n0.018826203\n-0.024064912\n-0.018991906\n-0.0016084168\n-0.009833728\n-0.039079987\n-0.0042158207\n0.00999943\n-0.026027832\n0.013268841\n-0.005519124\n-0.028475111\n0.0067937486\n0.0059971083\n3.5201545e-05\n-0.020929335\n-0.0008547951\n0.0039832015\n0.009145431\n-0.02420512\n0.010445548\n0.019986112\n-0.01910662\n0.008909625\n-0.0021190632\n0.0070359274\n-0.0053406768\n-0.012402097\n0.007214375\n-0.0071378974\n0.0030686585\n-0.013740452\n-0.030285079\n-0.02722598\n-0.017602565\n-0.015881822\n-0.022216706\n0.013396304\n0.23371515\n-0.02094208\n0.007845314\n0.009648908\n-0.0035657622\n0.009100819\n-0.0046906183\n0.001924683\n-0.014071855\n0.0020792312\n0.008393402\n0.004932797\n-0.01571612\n0.0050029014\n0.010228862\n-0.017181939\n-0.015219017\n-0.01422481\n-0.01038819\n-0.025326788\n0.0040405598\n-0.0006950687\n-0.011057368\n-0.010968144\n0.025454251\n-0.022497123\n-0.01887719\n-0.0027133569\n0.017436864\n0.004722484\n-0.020916589\n-0.002832853\n-0.0006424904\n-0.033216715\n-0.0302086\n0.0090115955\n0.0046396335\n0.027710337\n-0.005834594\n0.005726251\n0.04667675\n-0.010228862\n-0.026843593\n-0.016366178\n0.031789135\n0.017895728\n-0.0013192364\n-0.012236396\n-0.020100828\n-0.0013765945\n-0.023070704\n-0.0020919775\n0.0093812365\n0.037193544\n0.018099668\n-0.004269992\n0.045198187\n0.020865604\n0.005455393\n0.007679613\n0.011739292\n0.030183109\n-0.0022513056\n-0.0074629267\n-0.0017765079\n0.03365009\n-0.04504523\n0.014683674\n0.0068001216\n-0.02451103\n-0.012191784\n-0.027302457\n0.007896299\n0.0013973071\n-0.018851697\n-0.010745085\n0.02471497\n-0.007781583\n0.01179665\n0.0077114785\n-0.01288008\n-0.023822732\n0.009113565\n0.013421796\n-0.017105462\n-0.022484377\n0.03171266\n0.0037473962\n0.008737551\n0.0064559733\n-0.009820982\n-0.026894577\n0.00081456476\n-0.0099420715\n-0.005936564\n0.019234084\n0.0046013948\n-0.0033522625\n-0.0049296105\n-0.012937439\n0.0006297442\n-0.05485984\n0.018099668\n-0.005968429\n0.01887719\n0.01683779\n0.002225813\n0.008234074\n0.015066062\n-0.026690638\n-0.00023341562\n-0.009432222\n0.0056019747\n-0.0064846524\n0.026461205\n-0.0062010484\n0.011312293\n0.0009655281\n-0.009406729\n0.0024233798\n-0.0018673249\n-0.011771157\n0.0043209773\n0.0064910254\n-0.008514492\n-0.031381257\n0.0029985541\n0.020789126\n-0.001986821\n-0.018035937\n0.017500594\n-0.03143224\n0.0114142625\n0.0055414303\n0.008304179\n0.014199317\n0.012255515\n-0.0139189\n0.00060942984\n0.008763043\n0.008011015\n0.020750888\n0.0065451968\n0.01657012\n-0.002213067\n-0.015231763\n0.014186571\n-0.01853304\n0.0011168898\n0.011133845\n-0.047849406\n-0.012593291\n-0.0010890074\n-0.020508708\n0.031075345\n0.013230602\n-0.0026958308\n-0.019909635\n-5.13833e-05\n0.038646616\n-0.029928183\n0.0001412045\n0.010356325\n-0.01608576\n-0.0042891116\n-0.00544902\n-0.16141845\n-0.0116054565\n0.014161078\n-0.014823883\n0.022076497\n-0.0080811195\n0.026996547\n0.01330708\n-0.028169202\n-0.019234084\n0.005375729\n0.023822732\n-0.024192374\n-0.015371972\n0.0068319873\n-0.007437434\n-0.0040373732\n-0.01330708\n0.016748566\n0.025097357\n0.0028886178\n-0.0013734079\n0.0006970603\n-0.00014727889\n-0.01181577\n0.0049359836\n-0.0071570165\n0.022688316\n-0.0013080834\n-0.018086921\n-0.021732349\n-0.012325619\n0.0062966454\n-0.0011352125\n-0.008253193\n0.015473941\n-0.025454251\n0.011337785\n-0.0025986407\n0.020151814\n0.011197576\n0.027174994\n0.025976848\n-0.004824454\n-0.0020011605\n0.04045658\n0.018813457\n0.016774058\n0.014530719\n-0.023402106\n-0.012274634\n-0.006239287\n0.013268841\n0.0062552197\n0.009642535\n0.03201857\n0.006704525\n0.0054745125\n-0.0067363908\n-0.007641374\n-0.019387038\n-0.02363154\n0.00948958\n-0.032400955\n0.009789117\n0.0048786253\n0.0032375462\n0.008552731\n-0.034440354\n0.021847064\n-0.012026083\n-0.022497123\n0.019947873\n-0.035663996\n0.0008635581\n0.00665354\n-0.04677872\n-0.0027675284\n0.018112414\n-0.008559104\n-0.008858641\n0.04280189\n-0.0023771748\n0.016888775\n0.0030017407\n0.00797915\n0.011854008\n-0.005563736\n-0.007940911\n0.018915428\n0.0073609566\n-0.015932806\n-0.021235244\n-0.034491338\n0.014747405\n0.038468167\n0.018673249\n-0.02012632\n-0.009738131\n-0.0144032575\n0.010056787\n-0.0077688363\n-0.021222498\n0.03951336\n0.0257984\n0.00053972384\n0.0014227997\n0.0032168336\n0.029163409\n0.021719601\n0.010426428\n0.009668027\n0.0073482106\n0.02420512\n0.008176716\n0.025683684\n0.0011861975\n-0.015129793\n0.023351122\n-0.01649364\n0.057816967\n-0.007685986\n-0.010719593\n0.0018067802\n-0.016774058\n0.0035530159\n-0.09753427\n-0.037652407\n-0.0009320692\n0.009648908\n0.0027149501\n0.023006972\n0.0031068972\n0.025097357\n-0.003588068\n0.025505237\n-0.023771748\n-0.03265588\n-0.0013359658\n0.008093866\n0.012497693\n-0.029061439\n-0.009247401\n-0.0114206355\n0.0012212496\n0.022395153\n-0.005120804\n-0.011541725\n-0.0028137336\n-0.027557382\n0.00706142\n0.0018912242\n-0.03472077\n0.02630825\n0.006647167\n-0.007271733\n-0.007985523\n-0.01679955\n-0.0047129244\n0.0025285364\n-0.029137917\n-0.017003492\n-0.0139189\n-0.0068256143\n0.020559693\n-0.025645446\n0.022293182\n-0.008935118\n0.010802443\n-0.035562024\n0.0052387067\n-0.00816397\n0.0074947923\n0.025403267\n-0.011172084\n0.0106941\n-0.025377775\n0.0040501193\n-0.027965263\n0.0048722522\n0.038646616\n-0.011911366\n-0.008316925\n-0.006946704\n0.018915428\n0.00066280476\n0.01463269\n0.008093866\n0.014798391\n0.015486688\n-0.0031578823\n0.0018020004\n-0.008782163\n0.008004642\n-0.0016920641\n-0.008157597\n0.010725966\n0.0023580554\n-0.003457419\n0.0110509945\n-0.030183109\n-0.027174994\n-0.015384718\n-0.017118208\n0.019718442\n-0.017768266\n-0.0033108373\n-0.025301296\n0.0136512285\n-0.0038238736\n-0.0012140799\n0.011732919\n0.0027165436\n-0.017373132\n-0.010031295\n-0.01693976\n-0.0039449628\n0.0066599133\n0.0018386459\n-0.028296664\n-0.019807665\n0.005461766\n-0.0014610384\n-0.0011089233\n0.020406738\n-0.013243349\n-0.021681363\n-0.021706855\n-0.048435733\n0.012841842\n-0.004891372\n-0.010133265\n-0.01077695\n0.015333733\n0.011828516\n0.011968724\n-0.021834318\n-0.0058314074\n-0.017742774\n0.022012766\n-0.016098509\n0.016187731\n-0.030234093\n0.0014204097\n0.0033172104\n-0.010196996\n0.007482046\n-0.0011479587\n0.03849366\n0.03479725\n0.019514501\n-0.00685748\n-0.018086921\n0.0023867344\n0.001754202\n0.005786795\n-0.009846474\n-0.012140798\n0.020457724\n-0.04471383\n-0.00867382\n0.02824568\n0.0038621123\n-0.02742992\n0.009814609\n0.0037537692\n0.0069212113\n0.017487848\n-0.003935403\n-0.034822743\n0.003667732\n0.005321557\n-0.01945077\n0.025721923\n-0.014186571\n0.018023191\n0.03584244\n-0.014543466\n0.007813448\n0.021439185\n-0.00824682\n0.0019071569\n-0.016366178\n-0.009961191\n0.009655281\n-0.0053852885\n0.029214393\n-0.04030363\n0.026792608\n0.024957148\n0.0397173\n-0.013893408\n0.014505227\n0.030132124\n-0.019935127\n-0.007838941\n-0.01679955\n-0.026665146\n-0.004770282\n-0.019578233\n-0.003258259\n0.014760152\n0.0064559733\n-0.004518544\n-0.003792008\n-0.009954818\n-0.009617042\n0.009298386\n-0.00036107723\n-0.025683684\n-0.011630949\n0.01118483\n0.014887614\n0.008431641\n-0.003654986\n-0.0008930338\n0.0056083477\n0.013332573\n-0.028118217\n0.0050825654\n0.0028009873\n-0.0021110969\n-0.012975678\n0.018431071\n-0.016888775\n-0.0048340135\n0.02236966\n0.023746256\n-0.0016179765\n-0.002088791\n-0.019425279\n-0.008463507\n0.0012443522\n0.012848215\n-0.020827364\n-0.014186571\n-0.0017526087\n0.03879957\n0.018622264\n-0.015728867\n-0.00091135653\n0.0108598005\n-0.01632794\n0.0041011046\n-0.011223069\n-0.013294334\n-0.041935146\n0.011318666\n0.014377764\n0.0027866478\n0.01720743\n-0.005869646\n-3.5848814e-05\n0.012962932\n-0.0031706286\n-0.0015653983\n-0.011038248\n-0.014785645\n0.007635001\n0.00948958\n-0.024358075\n0.006239287\n-0.010764204\n0.0007305192\n0.005085752\n0.0056402134\n-0.028424127\n0.040660523\n0.0006918821\n-0.003654986\n0.028322157\n0.003639053\n0.031075345\n-0.011554471\n-0.0024568387\n-0.0038812316\n0.01965471\n0.027761322\n-0.013332573\n0.007309972\n0.00523552\n-0.014721913\n0.015779851\n0.0067300177\n0.021056797\n-0.020177307\n-0.0070359274\n0.024663985\n8.7481065e-05\n0.02226769\n-0.007953657\n-0.011076487\n-0.010808816\n0.033854026\n0.017462356\n0.011917739\n-0.031993076\n0.0030527257\n0.013778691\n0.010955398\n-0.005324744\n-0.003479725\n0.008896879\n0.018724235\n-0.0028567521\n0.009578804\n0.004524917\n-0.028271172\n0.025772909\n-0.017028984\n-0.006226541\n0.0056465864\n0.015996538\n0.000746452\n0.0019262764\n-0.019871397\n\n\n\ntext_array = []\n\nDir.glob(\"training_data/*.txt\") do |file|\n  text = File.read(file).dump()\n  text_array &lt;&lt; text\nend\n\n\nembedding_array = []\n\ntext_array.each do |text|\n  response = client.embeddings(\n    parameters: {\n      model: \"text-embedding-ada-002\",\n      input: text\n    }\n  )\n\n  embedding = response['data'][0]['embedding']\n  embedding_hash = {embedding: embedding, text: text}\n  embedding_array &lt;&lt; embedding_hash\nend\n\n[\"\\\"OpenAI is an AGI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.\\\"\", \"\\\"OpenAI\\\\u2019s large language models, including the models that power ChatGPT, are developed using three primary sources of information: (1) information that is publicly available on the internet, (2) information that we license from third parties, and (3) information that our users or our human trainers provide.\\\"\"]\n\n\n\nrequire 'csv'\n\nCSV.open(\"embeddings.csv\", \"w\") do |csv|\n  csv &lt;&lt; [:embedding, :text]\n  embedding_array.each do |obj|\n    csv &lt;&lt; [obj[:embedding], obj[:text]]\n  end\nend\n\n[{:embedding=&gt;[-0.009541887, -0.027511897, -0.00694962, -0.015462415, 0.0072427155, 0.011919217, -0.00973077, 0.026092011, -0.014107663, -0.012622646, 0.015449389, 0.01710375, 0.0067477096, -0.021845384, 0.0024066397, 0.009815442, 0.01843245, -0.013690816, 0.0039111967, 0.0071254773, -0.014824118, 0.010271369, -0.013000414, -0.009424648, -0.013990425, 0.0004367937, 0.016361242, -0.026365569, 0.00566, -0.01901864, 0.009300897, 0.003947019, 0.0002688744, -0.0005377488, -0.0019816512, -0.0010811967, 0.0070017255, -0.0064513576, 0.028632173, 0.0018562714, 0.018497583, 0.006591392, 0.004298734, -0.02488055, -0.020490631, 0.011000851, -0.030403772, 0.006754223, -0.00084102125, 0.0033901378, -0.0127008045, 0.033504073, 0.0037744187, -0.0019865362, -0.011697767, 0.0043117604, -0.040121518, 0.03277459, 0.010922692, 0.004295477, 0.010225777, -0.0144724045, -0.025531875, 0.0065262597, -0.013612658, 0.012551, -0.000623235, 0.0129417945, 0.005663256, -0.010720782, 0.026834521, 0.0016966972, -0.009411622, -0.013651737, 0.02204078, 0.018354291, -0.0035041196, -0.0073273876, -0.008630034, 0.017924419, 0.0009607019, -0.009802416, -0.0038330378, 0.0095939925, 0.011600069, -0.020177996, 0.0012945051, 0.0046537053, 0.0066630375, -0.012518434, 0.0027925489, -0.010134591, 0.019474568, 0.017116778, -0.037542276, 0.03082062, -0.0125249475, 0.013755948, -0.011033417, -0.047963448, -0.0090468805, -0.010727295, -0.006812842, -0.0037353393, -0.0084997695, -0.0028446545, 0.008395557, -0.01102039, 0.031211413, 0.009633072, 0.011580529, 0.017715994, -0.01079894, -0.019187985, -0.012870149, -0.0029081586, 0.020959584, -0.006379712, -0.019591805, -0.00031182103, 0.03144589, 0.017455464, -0.0012212312, 0.005725132, 0.0035236592, 0.034494083, -0.02123314, -0.017442439, 0.0020744647, -0.020073785, 0.0080177905, 0.012915742, 0.02521924, 0.011665201, -0.023121977, 0.020738134, -0.016647825, 0.0034324739, -0.0017357767, -0.012121127, 0.012635672, 0.008766812, -0.018745085, -0.0067151436, -0.02790269, 0.019122852, 0.00129939, -0.005744672, 0.025128054, 0.024255281, 0.01238817, -0.0053115417, -0.023095924, 0.013612658, 0.022066833, 0.0028707075, -0.008773325, 0.01802863, 0.00091918005, 0.011489344, 0.009281358, 0.011580529, -0.01640032, 0.005809804, 0.013729895, 0.030507984, 0.021154981, -0.003168688, 0.002217756, -0.022496708, 0.004494131, 0.045644738, -0.023786327, 0.013808055, 0.0047448906, 0.03019535, 0.018067708, 0.014355166, -0.014693854, 0.020204049, 0.0048849247, -0.0021086594, 0.016100712, 0.012648699, 0.017273095, -0.0076921284, 0.009737284, 0.0106882155, 0.017520597, -0.012238366, 0.015748998, -0.004034948, 0.023538824, 0.0063992515, -0.66653824, -0.033790655, -0.006917054, -0.015944395, 0.019774176, 0.02145459, 0.015214913, -0.027303474, 0.028085062, 0.030273508, -0.012362117, -0.010694729, -0.027407685, -0.014250955, 0.02292658, -0.019370355, -0.005096605, -0.02834559, -0.001151214, 0.0050835786, -0.024567915, 0.010303935, -0.006721657, -0.008734246, -0.0051910467, 0.0129939, 0.014589642, -0.008011277, -0.027147155, 0.0064448444, -0.003940506, 0.0173252, 0.020008652, -0.023030793, 0.046165798, -0.0013409118, -0.015058595, 0.017650861, 0.0005222799, 0.027590055, -0.029544026, 0.0033575718, 0.00803733, -0.017976524, -0.007210149, 0.023616984, 0.028970862, -0.013703843, -0.011346052, 0.0009696576, -0.0013832479, 0.012485868, -0.0008296231, -0.006259217, -0.0065685958, 4.23869e-05, 0.028918756, -0.009020828, 0.004220575, -0.020542737, -0.0020256154, 0.013065546, -0.043247867, -0.005783751, -0.030768514, 0.009574452, 0.0014483802, 0.0071645565, -0.00563069, -0.03650016, 0.026730308, 0.01063611, -0.0059107593, 0.00391771, -0.0035431988, 0.026730308, 0.01913588, 0.00041033368, -0.024476731, -0.005588354, 0.017663889, -0.022327363, 0.03011719, -0.010746835, 0.029804556, 0.008597468, 0.00389817, -0.009945707, 0.018197974, -0.0071710697, 0.020516684, 0.010603543, -0.0034617835, -0.032852747, 0.005353878, -0.009079447, -0.018575741, -0.009711231, -0.0025955234, -0.012713831, -0.0007701898, -0.0024652588, 0.031497996, 0.01621795, 0.002535276, 0.031836685, 0.0040447176, 0.0060638203, 0.027772427, -0.030247455, -0.016309137, -0.014198848, -0.0030889008, 0.0045820596, 0.013404234, -0.026639124, -0.01496741, -0.013195811, 0.018601794, -0.01847153, -0.010531898, -0.009366029, -0.007972198, -0.0186539, 0.014211874, 0.014498457, -0.006500207, -0.024255281, -0.040642574, -0.00065295165, 0.023239216, -0.007294821, -0.002413153, -0.0022910298, 0.0493182, 0.00028597165, 0.023460666, -0.014042531, 0.010714268, 0.014237928, -0.010584004, -0.004367123, 0.03785491, 0.0013848762, -0.029908767, -0.011267893, 0.00077181816, -0.0070473184, -0.013599631, -0.007633509, -0.010505845, 0.008564902, -0.01946154, 0.028996915, -0.011111576, -0.021923544, -0.031133255, -0.029596131, 0.013052519, -0.01412069, 0.008310885, 0.0049956497, -0.014876225, -0.020282209, -0.008512796, -0.0073860064, -0.00036555523, 0.04212759, -0.031862736, -0.025427662, 0.018380344, -0.03785491, -0.007340414, 0.02012589, 0.006353659, 0.025401609, -0.027042944, 0.0015224683, 0.0082197, -0.018106788, -0.009437675, -0.012466328, -0.0036506671, -0.012283958, 0.009294384, -0.010811967, 0.02455489, 0.02359093, -0.00694962, 0.0011072496, -0.017207962, 0.053773254, 0.001167497, 0.02993482, -0.017702969, 0.011131115, 0.0043540965, -0.004214062, 0.0069040274, 0.015267018, 0.019331276, 0.0013075316, 0.014498457, -0.0034096777, 0.007854959, -0.0072492287, 0.00368649, -0.017755074, 0.023929618, -0.0022861448, 0.018901402, 0.0045299535, 0.0083239125, -0.016426373, 0.00694962, 0.020686029, -0.023174083, 0.011932244, -0.026964786, 0.025036868, 0.02488055, 0.023786327, -0.0038362944, -0.00017860507, 0.005819574, 0.0221971, 0.006236421, 0.024059884, 0.008897076, -0.025102, 0.0013718498, 0.00952886, -0.0033836246, 0.013990425, 0.023721196, 0.0014980437, 0.018732058, -0.009561426, 0.010421173, -0.010141104, -0.002968406, -0.0036506671, 0.025610033, -0.026860574, 0.0190968, -0.005578584, 0.022587894, 0.0057186186, -0.05012584, 0.017833233, -0.028032957, 0.0056502298, -0.005318055, -0.0011585413, 0.011515397, -0.019513646, -0.007288308, -0.01301344, 0.0038590906, 0.03118536, 0.0027811506, 0.017155856, 0.028554015, 0.0020467835, -0.009704717, 0.00030571487, 0.019774176, 0.005777238, 0.0002586975, -0.0048523587, -0.0062527037, -0.008669114, 0.013143704, -0.024046857, 0.028293485, 0.026547939, -0.010141104, 0.0050347294, 0.00978939, 0.020321287, 0.0011577272, -0.031133255, 0.014876225, 0.015514522, 0.02185841, 0.0042661675, -0.018224027, 0.01126138, -0.026000828, -0.010154131, -0.00097047177, 0.016152818, -0.014237928, 0.020686029, 0.0033575718, 0.016348215, 0.020594843, -0.009059907, 0.0011699395, -0.032930907, 0.0059075025, 0.003797215, 0.01961786, -0.018237052, 0.004673245, -0.0003728826, -0.013443314, -0.00389817, -0.022952633, -0.036005154, 0.0108184805, -0.0075488375, 0.02207986, -0.0035073762, 0.0053473646, -0.004907721, -0.016322162, -0.022653025, -0.0008687025, 0.0024799136, -0.008245753, -0.018588768, -0.017729022, 0.009620045, 0.07393822, -0.001055958, -0.018484555, 0.007789827, -0.020738134, 0.026547939, -0.018276133, -0.009893601, -0.00564046, 0.008395557, -0.015801104, -0.009685177, -0.0041912654, -0.031419836, 0.0042270883, 0.0056697694, -0.01647848, -0.0102062365, 0.0008524194, -0.01518886, -0.00025849394, -0.0047709434, -0.008864511, -0.012205799, 0.012101587, -0.024711207, 0.015814131, 0.017924419, -0.029804556, -0.017377306, 0.009092473, -0.0074641653, 0.0036832334, -0.0048621288, -0.037229642, 0.007633509, 0.008356478, 0.016309137, 0.0028804773, -0.0051421975, 0.014589642, 0.015345178, -0.020946559, -0.030429825, 0.016725983, -0.012342577, -0.0070798844, 0.014498457, -0.012134153, -0.025102, 0.0016787859, -0.025075948, -0.043768927, 0.0026557709, 0.0052692057, 0.041085474, 0.0004864571, -0.006343889, 0.009203198, -0.042596545, -0.013208837, -0.01990444, -0.004051231, -0.0060442802, 0.003338032, -0.03616147, 0.006155005, 0.0060703335, -0.005751185, 0.016165845, 0.02709505, -0.023525799, -0.047833186, -0.01214718, -0.005122658, -0.0155666275, 0.00088172895, -0.010544925, -0.0035985613, 0.035484094, 0.01019321, -0.032644324, -0.013150218, -0.02237947, 0.0061615184, -0.020633923, -0.019370355, -0.020425498, -0.0023089412, 0.016634798, 0.007841933, 0.0025124797, 0.02108985, 0.001436168, -0.0056339465, 0.010824993, 0.020842345, -0.011658687, -0.013495419, -0.007118964, -0.008734246, -0.014394245, -0.015944395, -0.0015884148, 0.016426373, 0.005200817, 0.018979562, 0.020972611, -0.0073013343, -0.012642185, 0.0051421975, -0.0070212656, 0.029726397, -0.016817167, 0.008760299, -0.003269643, 0.024633048, 0.015801104, -0.0012008774, -0.02296566, -0.015058595, -0.00047872265, 0.0069952123, 0.017455464, 0.008603981, 0.008695167, 0.016686903, -0.01692138, -0.029648237, 0.0036148445, -0.023108952, -0.0044192285, -0.0073534404, 0.0009818699, 0.004901208, -0.019201012, -0.013098112, -0.0042498847, -0.03431171, -0.031993, -0.011157168, -0.0016209809, 0.017924419, 0.004894695, 0.0065946486, -0.026378594, -0.009522347, 0.0031279803, 0.0024913116, 0.039313875, -0.024802392, 0.022874475, -0.018211, -0.0015664325, -0.012928768, -0.021207087, -0.00975031, -0.006119183, 0.018627847, 0.033894867, 0.0264307, -0.005477629, 0.014394245, 0.016322162, 0.014316087, -0.023317374, 0.024151068, -0.0031914844, -0.0034324739, -0.010981311, 0.0048067663, -0.00047180234, 0.021519722, -0.013521472, 0.0019735096, 0.012642185, -0.011769412, -0.02624833, -0.016543612, -0.040199675, -0.005878193, 0.020699056, 0.00820016, 0.026339514, -0.032409847, -0.01802863, 0.044654727, 0.012036455, 0.0137950275, -3.2591608e-05, 0.02993482, 0.011795465, -0.015006489, 0.03366039, 0.0040056384, 0.0046081124, 2.2529171e-05, -0.024138043, 0.015280046, 0.014485431, 0.02197565, 0.019826282, 0.008760299, -0.013508446, -0.01190619, 0.016634798, 0.0012692664, 0.0038949135, 0.005161737, -0.020112865, 0.0059921746, -0.022978688, 0.0039795856, -0.015762024, 0.00095256034, 0.001642963, -0.005682796, 0.021207087, -0.002471772, -0.028371643, 0.018588768, -0.010134591, 0.040616523, -0.0061810585, 0.03571857, 0.015931368, 0.009522347, -0.027746374, 0.0164394, 0.008545362, 0.002735558, 0.009711231, 0.0032566166, -0.0043182736, -0.0029114152, -0.0018953509, 0.00027701596, -0.014654775, -0.03147194, 0.015983474, 0.0007384378, -0.00013199475, -0.013508446, -0.02274421, -0.012726857, 0.019604832, -0.0011129488, -0.0030270251, 0.017833233, -0.0068258685, 0.0059758914, -0.0017260069, 0.008395557, 0.02366909, 0.023460666, 0.006793302, -0.020034706, -0.0006004387, -0.0006553941, -0.005624177, -0.008545362, 0.0047351206, -0.0015493353, 0.016061634, 0.0008113046, 0.01802863, 0.0016437772, -0.0011015505, -0.009470241, 0.024385545, -0.03321749, -0.009261818, -0.018380344, -0.009541887, 0.021115903, -0.021663014, -0.010271369, 0.008910103, -0.026534911, -0.000617943, 0.01939641, 0.0061452356, -0.015201886, 0.0006106156, 0.013586604, -0.026938733, 0.00075105723, -0.024320412, 0.02127222, 0.00017606083, -0.0014776898, 0.0093530025, -0.026365569, -0.018406397, 0.03561436, -0.012355603, 0.006141979, 0.039470192, -0.020842345, 0.00084427785, -0.02159788, 0.0065588257, -0.019891415, 0.018666927, -0.006389482, -0.0061745453, 0.023877513, -0.00805687, 0.0006838895, -0.021128928, 0.0010649136, 0.028892703, -0.0010307191, 0.00868214, -0.017859286, -0.017038617, -0.0009997813, 0.006786789, -0.0063666855, 0.01710375, 0.0053831874, -0.008069896, 0.029648237, -0.007705155, 0.025075948, 0.0031442633, 0.03324354, 0.0041293898, -0.023760274, -0.044029456, 0.008232727, -0.0073860064, -0.0029700343, -0.010023866, -0.006001944, -0.010023866, -0.025740298, -0.013046006, 0.00096884347, -0.010707756, -0.00926833, 0.008297859, 0.007210149, -0.015227939, 0.013124165, -0.003307094, -0.0018351035, 0.0028690791, -0.028423749, -0.0025678421, -0.008942669, 0.040486258, 0.006982186, -0.029465867, -0.0337646, 0.0020060758, -0.0426226, 0.013182784, -0.005086835, 0.030012978, 0.015384257, 0.017781127, 0.019748123, 0.020334315, 0.0095484, -0.001425584, 0.013977398, 0.0063666855, -0.0054515763, -0.019813256, -0.015553601, -0.0023659319, -0.0100759715, 0.005549275, 0.0088058915, -0.013912266, -0.027251368, 0.03126352, 0.0068323817, -0.011105062, 0.005265949, 0.016361242, 0.0039274795, 0.006395995, 0.020425498, -0.029387709, -0.013651737, 0.010343014, -0.025636086, 0.00410008, -0.011580529, 0.004113107, 0.005011933, 0.01957878, -0.006565339, 0.006871461, -0.00014644598, 0.0137950275, 0.02691268, 0.00036697998, -0.0028821058, 0.008649574, 0.0012806645, -0.00827832, -0.0024620022, 0.005018446, -0.008649574, -0.0078028534, 0.021298273, -0.016673878, 0.014224902, -0.01692138, 0.004223832, -0.023069872, 0.00022979501, -0.0057935207, 0.013742922, -0.025857536, 0.0032891827, -0.0033608284, -0.0016983255, -0.0023854717, -0.014042531, 0.0028902472, -0.020308262, -0.024320412, -0.01301344, -0.012186259, -0.0068844873, 0.017755074, -0.0114307245, -0.020959584, -0.0025108515, 0.029960873, -0.022757236, 0.010408146, 0.20811082, -0.025453715, -0.018015603, 0.005181277, -0.038245704, -0.0030775026, 0.02344764, -0.008695167, -0.014824118, 0.0068649477, -0.0031458917, 0.012355603, 0.00053164264, -0.0073013343, -0.002012589, -0.03650016, -0.035900943, -0.019643912, 0.001890466, -0.014211874, 0.029127179, -2.7528587e-05, -0.016035581, -0.017116778, 0.004637422, 0.008317399, -0.012844096, -0.006923567, 0.0144724045, 0.012277445, -0.014876225, 0.0108184805, 0.023395535, -0.006721657, 0.0046862713, -0.017260067, 0.018080736, 0.0012049482, 0.03251406, -0.005204073, 0.030898778, 0.027746374, -0.009476754, -0.0063569155, 0.010942232, 0.036291737, -0.013169757, -0.0168823, -0.0037581355, 0.024190148, -0.03311328, -0.009014315, 0.0017211218, 0.036422, -0.024385545, 0.007894038, 0.0051780203, 0.0025515591, 0.014915304, 0.012668239, 0.0034455003, 0.023017766, 0.010733808, 0.024945684, -0.022470655, 0.027225316, -0.031237466, 0.015866237, 0.0114763165, 0.007646536, 1.6003218e-05, -0.020855373, -0.020985637, -0.017181909, -0.01957878, -0.015214913, 0.039730724, 0.036734637, 0.0042336015, 0.0009281357, 0.009339976, -0.0076204827, -0.026834521, 0.01633519, -0.036265682, -0.029361656, 0.0063210926, 0.00054385496, -0.023161057, -0.013586604, 0.010935718, -0.004865385, 0.006591392, -0.0102062365, -0.010785914, 0.014498457, 0.032175373, 0.00052635063, -0.0032370768, 0.003702773, -0.008454177, 0.053669043, 0.0150846485, 0.023499746, -0.0119127035, 0.03454619, -0.02270513, 0.02451581, 0.00868214, -0.012752911, -0.02484147, -0.030169297, 0.0054971687, -0.009411622, 0.0017553164, -0.007600943, -0.005767468, -0.0069300802, 0.032175373, -0.0028983888, -0.023942646, -0.009652612, -0.01146329, 0.015879262, -0.0020484119, -0.03108115, -0.021610908, 0.005549275, -0.022275258, -0.0032794129, 0.010310448, -0.02252276, -0.019305224, 0.011769412, -0.00325336, 0.003152405, 0.009007801, 0.023760274, -0.016309137, 0.0027713808, -0.0104342, 0.006643498, 0.006001944, -0.020269182, 0.009874062, -0.011489344, 0.036422, 0.0068193553, -0.012622646, -0.010772888, -0.031550102, -0.012479355, -0.009620045, -0.0051128883, 0.042414173, 0.02580543, -0.0045039007, -0.0006924381, 0.002624833, 0.01961786, -0.041606534, -9.37295e-05, 0.012928768, 0.012029942, -0.018732058, -0.008493256, -0.16538402, 0.0036897466, 0.020412473, -0.029544026, 0.03605726, 0.0067151436, 0.024606995, -0.0071645565, -0.00868214, 0.008753786, 0.02264, 0.00021229069, -0.01150237, -0.0014459378, 0.025531875, 0.011958296, -0.0062136245, 0.036917005, 0.01901864, -0.011893163, 0.012355603, -0.01452451, -0.006151749, -0.012472842, 0.022431575, -0.0021558802, -0.009450701, 0.018510608, -0.016035581, -0.009763337, -0.0009859407, -0.011528423, 0.04087705, 0.027251368, 0.015045568, -0.0019148906, 0.018380344, -0.014889251, -0.029283496, 0.0014093008, 0.016986512, 0.0386365, 0.021610908, -0.0028821058, -0.011521909, -0.00023569763, 0.012596593, -0.007841933, -0.0014353538, -0.022144994, 0.021949597, -0.029882714, 0.012225339, 0.0041912654, 0.008851484, 0.017416386, 0.01430306, -0.003823268, -0.0050672954, -0.023916593, -0.013032979, -0.011613095, 0.02336948, -0.02967429, 0.010225777, -0.007145017, -0.016934406, 0.018575741, -0.020686029, 0.02536253, -0.004214062, 0.007894038, 0.009561426, -0.0034487569, -0.017168883, 0.013755948, -0.0164394, 0.022027755, 0.0084997695, -0.013078572, 0.0019262887, 0.00047220942, -0.01563176, 0.0059237857, -0.01124184, -0.01214718, 0.012049481, -0.0024326926, -0.021467617, -0.0217542, 0.011801979, -0.005741415, -0.02805901, 0.00028067964, -0.004324787, 0.014055558, 0.018862324, 0.0062885266, -0.0074446257, -0.015709918, 0.0035659953, -0.0016120252, 0.016517559, -0.005064039, 0.02336948, 0.010662163, -0.013046006, -0.0091055, -0.0019653682, -0.0137950275, -0.02153275, -0.012655213, -0.003057963, 0.024125015, -0.015110701, 0.016530586, -0.01321535, -0.01905772, 0.01853666, 0.009874062, 0.04121574, 0.0032354486, -0.014185822, 0.017559677, -0.01389924, -0.023942646, -0.1039512, -0.018771138, -0.00434107, 0.009274844, -0.011534936, 0.023265269, 0.0013653365, 0.0350933, -0.034936983, 0.0074641653, -0.017781127, -0.03368644, -0.029101126, -0.014316087, 0.006158262, -0.022509733, -0.025909642, -0.029648237, -0.02385146, 0.0039958684, 0.008297859, 0.005708849, 0.03587489, -0.008043843, 0.0026655407, 0.012427249, -0.04124179, 0.012029942, 0.008877537, 0.0037418525, 0.0038004715, -0.026000828, 0.005249666, -0.030794566, -0.0069952123, -0.0069691595, 0.00023691886, -0.025466742, 0.01236863, -0.012785477, -0.0018351035, 0.016791115, 0.027485844, -0.014615695, -0.010049919, -0.006106156, 0.020490631, 0.007907066, -0.0057902643, -0.033425912, -0.03782886, -0.0065197465, -0.031315625, 0.0067086304, 0.009366029, 0.014641748, 0.029544026, 0.0057381582, 0.005357134, -0.008095949, -0.008792865, -0.0045820596, -0.040616523, -0.0015705033, 0.0027160184, 0.0065848785, -0.014811092, -0.0043475833, 0.008838457, -0.014159769, 0.021558803, 0.013690816, 0.00077303936, 0.024893578, -0.011645661, -0.01019321, 0.0019393152, -0.028032957, 0.010551438, -0.008701679, -0.03037772, -0.020477606, -0.007763774, -0.012974361, 0.013319562, -0.007320874, -0.025636086, -0.006539286, 0.014290034, -0.014381219, -0.017494544, 0.017220989, -0.011951783, -0.022731183, -0.018862324, -0.016908353, 0.009001289, -0.02248368, -0.010010839, 0.013716869, -0.0036506671, -0.0034878363, -0.046504486, 0.018588768, -0.011052957, -0.0040121516, -0.012401196, -0.02521924, 0.013124165, -0.005835857, 0.0014589642, 0.019787202, -0.023577904, 0.0075879167, 0.006080103, 0.016504534, -0.007828906, -0.007711668, 0.032045107, 0.005080322, 0.0055427616, 0.00520733, -0.00103479, 0.009893601, 0.029986925, 0.0036734636, -0.0025580723, 0.023603957, -0.034363817, 0.030273508, 0.009248791, -0.006115926, 0.009027341, -0.016191898, -0.014316087, 0.010232289, -0.014068584, 0.0014003451, 0.009072934, 0.027850585, 0.009620045, 0.03144589, -0.03871466, -0.02455489, 0.019591805, -0.009554913, -0.022939608, 0.0046504484, 0.00021452962, -0.008336939, 0.029882714, 0.033373807, 0.0020142174, 0.02753795, -0.06028649, -0.026990838, -0.0075488375, 0.0017650862, 0.02532345, 0.012511921, 0.006702117, 0.018367318, 0.036474105, -0.00413916, 0.0005992174, -0.0026948503, 0.015149781, 0.025974775, -0.012844096, 0.017676914, 0.010772888, 0.005060782, -0.025948722, -0.010557951, 0.0016103969, -0.013195811, 0.020751162, 0.0021168008, 0.0050151898, -0.002207986, -0.018158894, 0.0150195155, 0.012746397, -0.021024717, -0.011639148, 0.0033868812, 0.01585321, 0.028658226, -0.012844096, -0.0010665419, -0.005663256, -0.019422462, -0.02252276, 0.015657812, -0.00012995936, 0.024580942, 0.0068584345, -0.005018446, 0.017689941, 0.0026964785, 0.03587489, 0.026964786, 0.026170172, -0.00410008, -0.0060963864, -0.013534498, -0.031055097, -0.014290034, -0.011437237, -0.026534911, 0.004262911, 0.027720321, 0.029283496, 0.026990838, 0.015618733, 0.01301344, -0.01518886, 0.020516684, 0.016426373, -0.01677809, -0.044342093, 0.007828906, 0.014498457, 0.006464384, 0.012427249, -0.017559677, 0.030768514, 0.014667802, 0.017051645, -0.022626972, 0.0026915937, 0.0036930032, -0.008897076, -0.012564027, -0.0008076409, 0.0009338348, -0.015058595, -0.01589229, -0.013938319, 0.00934649, -0.03595305, 0.06075544, 0.029908767, -0.0046081124, 0.005705592, 0.0013018325, -0.015931368, 0.0053375945, 0.014133716, -0.028449804, -0.00912504, -0.01567084, -0.006272244, 0.004627652, -0.007946145, -0.0033738548, -0.0056013805, 0.0016258658, 0.034936983, -0.00997176, -0.012818043, 0.038870975, 0.035015143, 0.011092036, 0.0019995626, -0.033009067, -0.009958734, 0.016152818, -0.002699735, 0.005392957, -0.031550102, 0.024437651, -0.0067477096, -0.024828445, -0.014498457, -0.006005201, 0.005767468, -0.0019214038, -0.011424211, 0.027824532, 0.005503682, -0.011717306, 0.027407685, -0.021806305, -0.040121518, -0.013098112, 0.020712081, -0.042336017, 7.240883e-05, -0.02234039], :text=&gt;\"\\\"OpenAI is an AGI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.\\\"\"}, {:embedding=&gt;[0.005552796, 0.003520723, 0.0055626766, -0.0339096, 0.00242729, 0.009116334, 0.002451991, 0.016994324, -0.009689399, -0.045687065, 0.015268543, 0.042604372, -0.013081676, -0.008062423, 2.5022679e-05, 0.01976084, 0.013437372, 0.0020304264, 0.010519354, -0.02142075, 0.01698115, 0.006491436, -0.021697402, -0.017033845, 0.008121706, 0.010308572, 0.0139511535, -0.03298743, -0.021341708, -0.014899674, 0.007548641, 0.005197101, -0.018917711, -0.0073312717, -0.02142075, 0.010446898, 0.0043934933, -0.0029509522, 0.011968482, 0.0029015501, 0.024384877, 0.020406362, 0.0105391145, -0.009472029, -0.0038171357, 0.008358835, 0.006399219, -0.004363852, -0.014280501, 0.016836235, 0.003319821, 0.036017425, -0.0022296815, -0.003965342, -0.017270975, -0.00013235646, -0.018456625, 0.017442236, 0.021881837, 0.0032819463, 0.009722333, -0.0023482465, -0.0130619155, 0.019615928, -0.006046817, 0.0087804, -0.007324685, -0.0024322302, 0.01169183, -0.01292359, 0.019273406, -0.0094786165, 0.0063827513, -0.0047854166, 0.02341001, 0.012225374, -0.00800314, -0.009458856, -0.024516616, 0.01121757, 0.005141112, -0.012686459, -0.0149391955, 0.02341001, 0.008622313, -0.024253137, 0.022132142, -0.0029575392, 0.0072522284, 0.0020930024, 0.016124846, -0.011981656, 0.015755977, 0.0018278777, -0.03770368, 0.011744526, -0.02168423, 0.018179974, -0.01803506, -0.029456826, -0.009564247, 0.0010604984, -0.03770368, -0.010927745, -0.02433218, 0.0151368035, 0.02808674, -0.010875049, 0.009564247, 2.7325537e-05, -0.0059941215, 0.028692741, 0.004857873, -0.021605186, -0.019260233, 0.016493715, 0.019668624, -0.0100714415, -0.023067487, -0.003981809, 0.012488851, -0.0048183515, -0.0010802592, 0.021183621, 0.017613495, 0.02016923, -0.02927239, -0.01715241, -0.012436155, -0.0030876312, -0.0012663405, 0.012521786, 0.011915787, -0.00027891604, -0.042920545, 0.031353865, -0.014873326, 0.0014911201, 0.0019299753, -0.010591811, 0.0022856705, 0.011448113, -0.010499593, 0.0054243505, -0.0084774, 0.04131333, -0.002946012, 0.00970916, 0.02375253, 0.020024318, 0.02375253, -0.016348802, -0.016941627, 0.015545194, 0.0129631115, -0.009775029, 0.010209767, 0.028192133, 0.005398003, -0.015993107, 0.00681749, 0.018654233, 0.00092464266, -0.008431292, 0.024319008, 0.027217263, 0.026308265, 0.004011451, -0.011902613, -0.009228312, -0.023291444, 0.030089173, -0.01505776, -0.0094786165, -0.0043506785, 0.015294891, 0.033382647, -0.006083045, -0.02845561, -0.0112570925, 0.0077462494, 0.009050465, 0.0038566573, -0.009656464, -0.00038945323, -0.025992092, 0.0035306034, -0.025069918, 0.0155320205, -0.02700648, 0.02564957, 0.00035054906, 0.020129709, -0.031380214, -0.6639642, -0.038283333, 0.009050465, -0.037914466, 0.016572759, 0.016467366, 0.0070019243, -0.016098497, -0.007937271, 0.04974462, -0.007192946, 0.0036722228, 0.00076079235, -0.013977501, 0.015044587, -0.017705712, 0.010776245, -0.029904738, 0.024160922, 0.011474461, -0.024819616, 0.001651677, -0.0020995892, -0.0069162943, -0.024398051, 0.020393187, -0.010993614, -0.015874542, 0.011125353, 0.014412239, -0.011863091, -0.005141112, 0.02726996, -0.018614711, 0.039600722, -0.0074827718, -0.022013577, 0.022922575, -0.0026133712, 0.024845963, -0.032829344, -0.014267326, 0.0072258804, 0.026137006, -0.009340291, 0.023647139, 0.020353666, -0.0008106061, -0.025570527, -0.0072390544, -0.0038797117, -0.020380013, 0.015294891, -0.018364407, 0.0063333493, 0.008898965, 0.022474661, -0.01566376, 0.0011617728, -0.018838668, 0.013898457, 0.019154841, -0.0315383, -0.018298538, -0.01563741, 0.006554012, 0.0103678545, 0.011942134, -0.013740371, -0.02845561, 0.017099714, 0.015413456, -0.0020732414, -0.002633132, -0.029588565, 0.013417611, 0.017890148, -0.0044198413, -0.030589782, 0.01042055, 0.0055989046, -0.01009779, 0.0014927668, -0.015940411, 0.021262664, 0.021025535, 0.007133663, -0.0069624027, 0.01451763, -0.0008793574, -0.0028192133, 0.031090388, -0.012508612, -0.0235154, -0.017073367, 0.0024733986, -0.01941832, -0.02632144, -0.0014532452, -0.02036684, 0.0036623424, -0.02774422, 0.04263072, 0.0121463295, 0.036017425, 0.020116536, -0.018996755, 0.011816982, 0.0056746546, -0.016019454, -0.009010944, 0.022066271, -0.009933116, -0.0016426198, 0.022421967, -0.021776445, 0.0012202319, -0.0019003341, 0.010848701, -0.016348802, 0.003471321, -0.006527664, 0.0053189597, -0.015966758, 0.023462705, 0.021763273, 0.014306848, -0.015044587, 0.003919233, 0.025754962, 0.0023630671, -0.012087047, 0.007772597, -0.019497363, 0.03559586, 0.007983379, 0.041128896, -0.0068701855, 0.0026183114, -0.0020172524, -0.029430479, 0.005704296, 0.00054259977, 0.0009847486, -0.037203074, -0.012218786, -0.0002445404, -0.0057866327, -0.0025293876, -0.014201458, 0.011823569, -0.014636195, -0.00037278002, 0.02375253, -0.0074959453, -0.015452977, -0.011296614, -0.034462906, 0.011296614, -0.010110963, 0.0050060796, 0.017824277, -0.008510335, -0.00019380033, -9.7208926e-05, -0.008115118, 0.0056812414, 0.022777662, -0.03261856, -0.017033845, 0.021196796, -0.028877174, 0.007423489, 0.03488447, -0.0063926317, 0.022039924, -0.006254306, 0.0015380521, 0.013845762, -0.030168217, -0.0008513629, 0.008497162, 0.0027352297, -0.008681596, 0.012119982, 0.014767935, 0.032697603, 0.038942028, -0.030458042, -0.002946012, -0.018706929, 0.02662444, -0.0065046097, 0.034120385, 0.009182204, -0.0054671657, 0.019154841, -0.0030234086, 0.0018657526, 0.013832589, 0.01607215, 0.044580456, 0.00619173, -0.028376566, -0.0038006683, -0.033777863, 0.011316375, -0.032276038, 0.012633764, 0.0014754761, 0.007838466, 0.00455158, -0.01270622, -0.001059675, 0.010934331, 0.030800562, -0.004097081, 0.01363498, -0.012455916, 0.025583701, 0.008734291, 0.0022543825, 0.03130117, 0.0017126062, -0.011935548, 0.022250706, -0.022619575, 0.027111873, 0.0020287796, -0.028165784, 0.023647139, 0.0009641643, -0.0019151547, 0.01559789, 0.016533237, -0.009867246, 0.019273406, -0.021065056, 0.020590795, -0.0053683617, -0.014188283, -0.005654894, 0.010710375, -0.033382647, 0.042709764, -0.022342924, 0.014491283, -0.015400281, -0.044000804, -0.0054803398, -0.03095865, 0.011705005, -0.01674402, -0.005210275, 0.023963312, -0.0057734586, 0.021776445, -0.008556444, -0.0141224135, 0.015821846, -0.009656464, 0.0092349, 0.02148662, 0.0042617545, 0.00815464, -0.004383613, -0.007785771, -0.002921311, -0.012673286, -0.0007167421, -0.010143898, 0.008378596, 0.012811611, -0.026295092, 0.029456826, 0.019879404, -0.009926529, -0.003015175, 0.01617754, 0.044264283, -0.007904336, -0.026558569, 0.007660619, 0.022645922, -0.0094522685, -0.00020913556, -0.021802794, 0.008312726, -0.021328533, -0.0023449531, -0.011718178, 0.00227085, -0.0053420137, 0.016467366, -0.00203866, 0.0017817691, 0.0006549895, -0.017350018, -0.008246858, -0.016348802, -0.006909707, 0.0054869265, -0.017811105, -0.0013149192, 0.029799348, -0.00789775, -0.032908387, 0.0064387405, -0.010914571, -0.027217263, 0.01158644, 0.015993107, -0.000666105, -0.03319821, 0.011579853, 0.0055001006, -0.004396787, -0.0060896324, 0.00141043, 0.0028883761, -0.0017109595, -0.027875958, -0.014017023, 0.002801099, 0.047478713, 0.016098497, -0.013753545, 0.0031666746, -0.017653018, 0.000894178, -0.0034877884, -0.005697709, -0.013990675, 0.02595257, -0.011784048, -0.0036623424, 0.010670854, -0.0031238594, 0.0035240166, 0.00019287404, -0.007192946, -0.01939197, -0.027085526, -0.024503442, 0.01661228, -0.010736723, 0.003998277, 0.0038500703, 0.02090697, -0.009952877, 0.025807658, 0.025517832, -0.019141667, -0.012811611, 0.010927745, -0.00289661, -0.004584515, 0.0025524418, -0.020630317, 0.02940413, -0.0030843378, 0.004666852, 0.014003849, 0.019497363, 0.0026792407, 0.007212707, -0.006448621, -0.024147747, -0.006339936, -0.03201256, 0.005058775, 0.023541749, -0.0072719892, -0.03773003, -0.00096745783, 0.011856504, -0.03609647, 0.0038105487, 0.014675718, 0.0011230744, 0.0059315455, -0.011494222, 0.0033725167, -0.03962707, -0.0016911986, -0.026637612, 0.00076408585, -0.0069689895, -0.009313943, -0.0028603817, 0.0074564237, 0.002246149, -0.026440004, 0.017231453, 0.014030197, -0.032486822, -0.060283735, -0.014991891, 0.010749897, 0.003757853, 0.01887819, 0.010644506, -0.018627886, 0.026914265, -0.0072851633, -0.026308265, -0.0017916495, -0.019945275, 0.0005590671, 0.006227958, -0.02835022, -0.012139743, 0.013832589, 0.010921158, -0.0008661835, -0.010624745, -0.014069718, -0.0033791037, 0.0070085116, 0.018232668, 0.028587349, 0.008714531, 0.009267834, -0.011863091, -0.009952877, -0.024068704, -0.020090187, -0.01820632, 0.0034350927, 0.010914571, 0.019471014, 0.00932053, 0.008207336, -0.007021685, 0.014399066, 0.0012391694, 0.010947506, -0.015400281, 0.0012054113, -0.021447098, 0.03203891, -0.0016911986, -0.005322253, -0.02543879, -0.008602552, -0.04012768, 0.021302186, 0.022118967, -0.008549857, 0.0019629102, 0.0057405243, 0.00759475, -0.03796716, 0.006185143, -0.006623175, 0.02368666, -0.009887007, -0.0070941416, -0.0024437571, -0.01965545, -0.023133358, 0.009472029, -0.02435853, 0.00282086, -0.0003237896, -0.013779893, 0.006290534, 0.010229528, 0.019141667, -0.020696187, -0.007937271, 0.0035701252, 0.040206723, 0.03907377, -0.00822051, 0.021499794, -0.021183621, -0.017402714, -0.00093205296, -0.014912847, 0.0007513236, 0.023120183, 0.039442636, 0.026703482, 0.032776646, -0.017468583, 0.016322454, 0.031353865, -0.005460579, 0.003272066, -5.5680284e-05, 0.015373934, -0.0047360146, -0.031828128, 0.002382828, 0.010163659, 0.027322656, -0.007910923, 0.008918726, 0.012390047, -0.009274421, -0.004564754, -0.00822051, -0.013937979, -0.016230237, 0.023159705, -0.005335427, 0.028007697, -0.02892987, 0.0049863188, 0.014333196, -0.0060138823, 0.0043737325, 0.009070226, 0.023857921, -0.014385892, -0.016019454, 0.0169548, 0.0029278977, -0.016994324, -0.0026808872, -0.04297324, 0.013582285, 0.005760285, 0.011968482, 0.014240979, 0.009432508, -0.011052896, 0.011915787, 0.01143494, -0.010236115, 0.004999493, -0.014662543, -0.017705712, -0.021368055, -0.020050665, -0.012528373, 0.0054210573, -0.016559584, 0.008800161, 0.0009970991, 0.026743004, -0.012429569, -0.015927237, 0.045054715, 0.0035470708, 0.062338863, 0.009274421, 0.012119982, -0.0009493437, 0.0315383, -0.004248581, 0.0094786165, -0.00055742037, 0.008615727, 0.0055165677, -0.0008612433, -0.00391594, -0.007311511, 0.027190916, 0.03296108, -0.012462503, -0.027638828, 0.0261897, 0.015373934, 0.014794283, -0.018219495, -0.027665177, -0.02338366, 0.0010242702, 0.003471321, 0.014912847, 1.1880948e-05, -0.01098044, 0.002358127, 0.028561002, 0.027454395, 0.0074959453, 0.014623022, 0.01766619, 0.0017488344, 0.0025244474, -0.0013947859, -0.0054375245, -0.0067911423, -0.0043539717, 0.0026907679, 0.0024865724, -0.0037809075, 0.017613495, -0.0073839673, 0.01231759, 0.0047854166, 0.029588565, -0.030405346, 0.0012078814, -0.0145835, -0.0075222934, 0.02060397, -0.020116536, 0.0065309578, 0.009933116, -0.024780095, 0.010782832, 0.034673687, 0.016915279, -0.029878391, 0.003314881, 0.0026907679, -0.021157272, -0.011290027, -0.0026874742, 0.007825293, -0.033593427, -0.009722333, 0.010703788, -0.009392986, 0.00060805754, 0.0015100576, -0.026861569, 0.010262463, 0.046134975, -0.017350018, 0.010631332, -0.0057998067, 0.01363498, -0.033540733, 0.009663051, 0.0036491684, -0.019023102, 0.017587148, -0.012679872, -0.0135559365, -0.010637919, 0.0073971413, 0.016296105, 0.010723549, 0.020722535, 0.016967975, -0.0027039417, 0.009274421, 0.0020353666, 0.023897443, 0.01803506, 0.00088018074, -0.02703283, 0.025293875, -0.0068372507, 0.014464935, -0.010176833, 0.023344139, -0.0013437371, -0.034146734, -0.024371702, 0.01779793, -0.0031403268, 0.008609139, -0.015611064, -0.006527664, 0.0007546171, -0.023884268, 0.013042155, -0.006942642, -0.0065573053, 0.0011576558, 0.025899874, 0.009485204, -0.005286025, -0.02131536, 0.0050686556, -0.013226589, -0.004251874, -0.030984998, 0.013220002, -0.0053420137, 0.039785158, 0.00884627, -0.041576806, -0.042709764, -0.009867246, -0.0393109, 0.011658896, -0.0007241525, 0.024147747, 0.013819414, 0.02168423, 0.006386045, 0.01738954, -0.005009373, 0.0025524418, 0.0009987458, 0.009043878, -0.0006558129, -0.009742094, -0.022922575, 0.025596876, -0.003827016, -0.000666105, -0.0006018823, -0.021368055, -0.012416394, 0.0002865322, -0.008523509, -0.019668624, 0.003645875, 0.016454194, 0.005002786, -0.0043177437, 0.030379, -0.029983781, -0.016045803, 0.013990675, -0.0063629905, -0.017613495, -0.010670854, 0.0011016668, 0.020722535, 0.0005043131, -0.0060764584, -0.0007772597, -0.009827725, 0.007542054, 0.035780296, 0.00532884, -0.0015808672, 0.014372718, 0.00011372775, -0.005829448, 0.0028406207, 0.0117577, 0.0020304264, 0.01559789, 0.031511955, -0.026374135, 0.0025277408, -0.018364407, -0.0045449934, -0.042340893, -0.012508612, -0.0015643998, 0.004857873, -0.034225777, 0.012337351, 0.011678657, 0.0013643213, 0.0056186654, -0.013937979, 0.020459056, -0.024398051, -0.012067286, -0.019813536, -0.023489052, 0.007838466, 0.017982366, -0.013898457, -0.017600322, 0.019299755, 0.03211795, -0.041945677, 0.011362483, 0.19117954, -0.03177543, 0.002608431, 0.020327318, 0.0030234086, -0.0006916294, 0.012943351, 0.008997769, -0.0077396627, 0.00042032954, -0.011612787, 0.011461288, -0.01035468, -0.00461745, -0.0005780046, -0.026953787, -0.041260634, -0.03938994, -0.0027615775, 0.005108177, -0.011138527, -0.0076342714, -0.007403728, -0.020762056, -0.0048249387, 0.011942134, -0.008273205, -0.0010917864, 0.00808877, 0.015413456, 0.0014244273, 0.010387615, -0.008055836, 0.018562015, -0.008767226, -0.02304114, 0.0045186453, 0.0042057657, 0.024398051, 0.0018114104, 0.034014992, 0.006323469, 0.0019777308, -0.022883054, 0.007048033, 0.016664976, -0.012172678, -0.01559789, 0.013779893, 0.011527156, -0.021025535, -0.014926021, 0.013318806, 0.033119168, -0.019312927, 0.022645922, -0.011639135, 8.470402e-05, -0.0008735938, 0.0011848271, -0.027322656, 0.008246858, 0.00955766, 0.025610048, -0.016230237, 0.010710375, -0.0070282724, 0.0031930225, 0.01607215, -0.025807658, -0.017165583, -0.011230744, -0.007278576, -0.009900181, -0.033593427, -0.03298743, 0.02750709, 0.030668825, 0.018008713, 0.015966758, -0.00094440347, -0.028956218, 0.015993107, 0.0151368035, -0.012370286, -0.04429063, 0.0130355675, -0.02196088, -0.003540484, -0.0013396203, 0.0046899063, -0.0076145106, 0.0056450134, 0.0054869265, 0.008286379, 0.010176833, 0.00979479, -0.015268543, -0.0068899463, 0.0006372871, -0.009860659, 0.06260234, 0.025807658, 0.029641261, 0.0009707513, 0.018351234, -0.008681596, 0.010677441, -0.00020316614, 0.0054671657, -0.018496146, -0.027401699, 0.004047679, 0.007785771, -0.0088857915, -0.00884627, -0.008615727, -0.01098044, 0.03322456, -0.007449837, -0.0021045294, -0.01684941, -0.01285772, 0.017205104, 0.0120475255, -0.031011345, -0.020485405, -0.012311003, -0.018482972, -0.0011271912, 0.016151194, -0.031591, 0.0013223295, 0.026057962, -0.011546917, -0.008931899, 0.012054113, 0.0029591857, 0.005427644, 0.004209059, 0.0030975118, 0.0032523049, -0.009063639, -0.027349003, 0.01965545, -0.005816274, 0.0018772798, 0.0012185852, -0.013009219, 0.0024503442, -0.015466151, 0.008622313, -0.006050111, 0.011171462, 0.042709764, 0.009445681, -0.0151368035, -0.007673793, -0.0141487615, 0.010822354, -0.03670247, -0.0072456417, 0.0015010005, 0.0047887103, -0.009142682, -0.0070941416, -0.16693959, 0.004620743, 0.009584008, -0.044264283, 0.020577623, 0.014385892, 0.035200644, 0.010987028, -0.002170399, -0.008319314, 0.018601537, -0.018588364, -0.016888931, -0.0026166646, 0.004472537, 0.008852856, -0.011487635, 0.018865015, 0.022988444, 0.01158644, 0.029509522, -0.01464937, 0.016151194, -0.018153625, 0.003813842, 0.0057372306, -0.020735709, 0.019681796, -0.005908491, -0.039600722, -0.02500405, 7.343417e-05, 0.012133156, 0.0124427425, 0.033066474, -0.0014960603, 0.03525334, -0.017890148, -0.03132752, 0.009472029, 0.008740879, 0.01277209, 0.022580054, -0.0065177837, -0.001989258, -0.012791851, 0.00065622455, -0.02250101, 0.0069624027, -0.0035371904, 0.024319008, 0.0021621652, 0.011191223, -0.00455158, -0.010677441, 0.018825494, 0.0083654225, -0.0015347586, -0.0027862785, -0.0064189797, -0.0024239963, -0.017521279, 0.012488851, -0.02811309, 0.005098297, -0.013187068, -0.029377783, 0.0056944154, -0.033619776, 0.03130117, -0.010782832, 0.0036985707, 0.005111471, -0.01827219, 0.007423489, 0.008714531, -0.017402714, 0.0114547005, 0.02808674, -0.007581576, -0.012133156, -0.0023153117, -0.031222127, 0.008918726, -0.010124138, -0.012054113, 0.0111582875, 0.017942842, -0.028692741, -0.019154841, 0.0071073156, -0.0033856907, -0.009616942, 0.0014705359, 0.011388831, 0.008194162, 0.027401699, -0.007153424, 0.009030704, -0.0037117444, -0.0034449731, 0.004604276, -0.006942642, 0.0067582075, 0.033303604, -0.0064123925, -0.016454194, -0.003583299, 0.03132752, -0.0053420137, -0.022698618, -0.00012896006, -0.00471296, 0.0079702055, -0.027638828, 0.011494222, -0.024002833, -0.033356298, 0.012791851, 0.0017257801, 0.04655654, -0.00109755, 0.0036491684, 0.030326303, -0.011402004, -0.012087047, -0.11593027, -0.029456826, 0.014715239, 0.016019454, -0.009373225, 0.035068903, 0.0017438942, 0.028982567, -0.033514384, 0.029693956, -0.03475273, -0.010782832, 0.007910923, -0.008925313, 0.026005266, -0.009636703, -0.0108618755, -0.01881232, -0.025043571, 0.013806241, 0.0068240766, -0.0013182127, 0.011362483, -0.022118967, 0.009511551, -0.01044031, -0.035174295, 0.018614711, 0.015426629, -0.011593026, 0.028508306, -0.03417308, -0.007192946, -0.021671055, 0.0010168599, -0.009096573, -0.016809888, -0.026400482, 0.014135588, -0.008457639, 0.00084477593, 0.002619958, 0.019510536, -0.007192946, -0.013845762, -0.019102145, -0.033040125, 0.03596473, -0.020551274, -0.027085526, -0.03177543, 0.00541447, -0.02726996, -0.0077791843, 0.024292659, 0.024648355, 0.0066791642, 0.009755268, 0.0054375245, -0.020617144, -0.022158489, -0.024345355, -0.016902106, -0.010644506, 0.008800161, 0.0022477957, -0.011869678, -0.015690107, 0.007924097, -0.026808873, 0.014899674, 0.00431445, -0.0058986107, 0.009458856, -0.017310496, -0.006652816, -0.004459363, -0.020643491, 0.002069948, 0.0024157627, -0.004202472, -0.01928658, 0.011243918, -0.0070941416, -0.015927237, 0.003089278, 0.0009831018, -0.019563232, -0.016282933, -0.043052286, -0.007627684, 0.026914265, -0.009267834, -0.024780095, -0.0103678545, -0.011863091, -0.010651093, -0.0119092, -0.010512767, 0.0031913756, -0.0025820832, -0.0049896124, -0.051509924, 0.010868462, 0.008418118, -0.004577928, 0.0019217418, -0.026176527, -0.0068570115, -0.011210984, -0.0046767322, 0.009327116, -0.016888931, 0.019576406, -0.007416902, 0.009933116, -0.006610001, -0.0004127134, 0.01128344, 0.0035668316, 0.015887715, 0.0015866308, 0.021565665, -0.0024750452, 0.030879606, 0.015676932, 0.0028290937, 0.0029987076, -0.021802794, 0.047320627, -0.01339785, -0.00019102146, -0.009775029, -0.015149978, 0.0046306234, -0.010255876, 0.001926682, -0.0057767523, -0.002237915, 0.019326102, 0.016520062, 0.030932302, -0.017850626, -0.044027153, 0.008253444, -0.019747667, -0.0068899463, -0.00227085, -0.0010234469, 0.0033362885, 0.022303402, 0.018799147, 0.031933516, 0.01881232, -0.0476368, -0.030379, -0.018996755, 0.005668068, 0.03533238, 0.0048512863, -0.00045079418, 0.0143463705, 0.03823064, 0.013608632, 0.011375657, -0.0005788279, -0.0008213099, 0.009129508, -0.0035240166, 0.013193655, 0.012660111, -0.0151368035, -0.00901753, 0.0037117444, 0.0080690095, 0.009149269, 0.0020419534, 0.008483987, 0.007838466, 0.014702065, -0.0036359946, 0.02845561, 0.016032629, -0.011777461, -0.009215139, 0.006784555, 0.023620792, 0.00932053, 0.00026635965, 0.0026248982, -0.02672983, -0.018562015, -0.0021934533, 0.017600322, 0.018957233, 0.006942642, 0.0030761042, 0.0033955711, -0.004834819, 0.0036425816, 0.014056545, 0.023291444, 0.02845561, -0.013490067, -0.0031403268, -0.007785771, -0.033646125, -0.012594243, -0.027375352, -0.023528574, 0.0057734586, 0.022000402, 0.019747667, 0.016467366, 0.012133156, 0.012502025, -0.017784756, 0.0374929, -0.0022165077, -0.008556444, -0.03475273, 0.00030444044, 0.03022091, 0.009129508, 0.0135295885, -0.025860352, 0.037835423, 0.015729629, 0.03024726, -0.029509522, 0.023976486, 0.012205612, -0.024187269, -0.017363193, -0.0042584613, -0.0069162943, -0.03441021, -0.0046372106, -0.03717673, 0.021736924, -0.017982366, 0.07625049, 0.019853057, 0.009010944, 0.02165788, -0.0025491484, -0.0020238394, 0.018930886, 0.005147699, -0.010479832, -0.0018147038, -0.0063267625, -0.0016105085, -0.013832589, -0.022277053, -0.0043803197, -0.018179974, 0.0018163506, 0.01766619, -0.010374441, -0.005174047, 0.02845561, 0.022448314, 0.016836235, -0.013002633, -0.021065056, -0.0008085477, 0.016599106, -0.013338567, 4.9736595e-05, -0.023344139, 0.03549047, 0.0143463705, -0.024780095, -0.017600322, -0.021196796, 0.017284147, -0.009215139, -0.016019454, 0.0048315255, 0.007884575, 0.0053057857, 0.0068240766, -0.016467366, -0.020788403, -0.014873326, 0.0033181745, -0.023528574, -0.008036075, -0.025596876], :text=&gt;\"\\\"OpenAI\\\\u2019s large language models, including the models that power ChatGPT, are developed using three primary sources of information: (1) information that is publicly available on the internet, (2) information that we license from third parties, and (3) information that our users or our human trainers provide.\\\"\"}]\n\n\n\nrequire 'cosine_similarity'\n\nquestion = \"What is open AI\"\n\nresponse = client.embeddings(\n  parameters: {\n    model: \"text-embedding-ada-002\",\n    input: question\n  }\n)\n\nquestion_embedding = response['data'][0]['embedding']\n\nsimilarity_array = []\n\nCSV.foreach(\"embeddings.csv\", headers: true) do |row|\n  text_embedding = JSON.parse(row['embedding'])\n  similarity_array &lt;&lt; cosine_similarity(question_embedding, text_embedding)\nend\n\nindex_of_max = similarity_array.index(similarity_array.max)\noriginal_text = \"\"\n\nCSV.foreach(\"embeddings.csv\", headers: true).with_index do |row, rowno|\n  if rowno == index_of_max\n    original_text = row['text']\n  end\nend\n\nprompt =\n\"You are an AI assistant. You work for Sterling Parts which is a car parts online store located in Australia.\nYou will be asked questions from a customer and will answer in a helpful and friendly manner.\n\nYou will be provided company information from Sterline Parts under the [Article] section. The customer question\nwill be provided unders the [Question] section. You will answer the customers questions based on the article.\nIf the users question is not answered by the article you will respond with 'I'm sorry I don't know.'\n\n[Article]\n#{original_text}\n\n[Question]\n#{question}\"\n\nresponse = client.completions(\n  parameters: {\n    model: \"text-davinci-003\",\n    prompt: prompt,\n    temperature: 0.2,\n    max_tokens: 500,\n  }\n)\n\nputs response['choices']\n\nresponse = client.chat(\n  parameters: {\n    model: \"gpt-3.5-turbo\",\n    messages: [{role: \"user\", content: prompt}],\n    temperature: 0.7,\n  }\n)\n\nputs response.dig(\"choices\", 0, \"message\", \"content\")\n\n\n[Answer]\nOpenAI is an AGI research and deployment company whose mission is to ensure that artificial general intelligence benefits all of humanity."
  },
  {
    "objectID": "posts/2023-07-17/index.html",
    "href": "posts/2023-07-17/index.html",
    "title": "eth",
    "section": "",
    "text": "https://github.com/q9f/eth.rb\nIt should be noted that using gem 'eth', github: 'q9f/eth.rb' can fix the error of undefined method 'bytesize' for :inspect:Symbol. The following PR addresses the issue of the overridden send method.\nhttps://github.com/q9f/eth.rb/issues/171\n\nrequire 'bundler/setup'\nrequire 'eth'\n\ntrue\n\n\n\nname = \"DAI\"\nabi = '[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]'\naddress = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\ndai = Eth::Contract.from_abi(name: name, address: address, abi: abi)\n\n#&lt;Eth::Contract::DAI:0x000000013885fd20&gt;\n\n\n\nclient = Eth::Client.create \"https://mainnet.infura.io/v3/#{ENV['INFURA_ACCESS_TOKEN']}\"\nclient.call(dai, \"name\")\n\n\"Dai Stablecoin\"\n\n\n\nclient.call(dai, \"symbol\")\n\n\"DAI\"\n\n\n\nclient.call(dai, \"decimals\")\n\n18\n\n\n\nclient.call(dai, \"totalSupply\")\n\n3211953036243517939066192400\n\n\n\nclient.call(dai, \"balanceOf\", \"0x9a315bdf513367c0377fb36545857d12e85813ef\")\n\n797534767207493696656"
  },
  {
    "objectID": "posts/2023-08-03/index.html",
    "href": "posts/2023-08-03/index.html",
    "title": "公式",
    "section": "",
    "text": "\\[\nax^2+bx+c=0 \\quad (a \\neq 0)\n\\]\n\\[\nx = \\frac{-b \\pm　\\sqrt{b^2 - 4ac}}{2a}\n\\]\n\n\n\n2次方程式\\(ax^2+bx+c=0\\)の二つの解を\\(\\alpha\\), \\(\\beta\\)とするとき, 解と係数の間には次の関係がある。\n\\[\n\\alpha + \\beta = - \\frac{b}{a}, \\quad \\alpha\\beta = \\frac{c}{a}\n\\]\n\n\n\n\\((x + b)(x + d) = x^2 + (b+d)x + bd\\)\n\\((ax + b)(cx + d) = acx^2 + (ad + bc)x + bd\\)\n\\((x+y)^2 = x^2 + 2xy + y^2\\)\n\\((x-y)^2 = x^2 - 2xy + y^2\\)\n\\((x+y)(x-y) = x^2 - y^2\\)\n\\((x+y+z)^3 = x^2 + y^2 + z^2 + 2xy + 2yz +2zx\\)\n\\((x+y)^3= x^3 + 3x^2y + 3xy^2 + y^3\\)\n\\((x-y)^3= x^3 - 3x^2y + 3xy^2 - y^3\\)"
  },
  {
    "objectID": "posts/2023-08-03/index.html#次方程式の解の公式",
    "href": "posts/2023-08-03/index.html#次方程式の解の公式",
    "title": "公式",
    "section": "",
    "text": "\\[\nax^2+bx+c=0 \\quad (a \\neq 0)\n\\]\n\\[\nx = \\frac{-b \\pm　\\sqrt{b^2 - 4ac}}{2a}\n\\]"
  },
  {
    "objectID": "posts/2023-08-03/index.html#解と係数の関係",
    "href": "posts/2023-08-03/index.html#解と係数の関係",
    "title": "公式",
    "section": "",
    "text": "2次方程式\\(ax^2+bx+c=0\\)の二つの解を\\(\\alpha\\), \\(\\beta\\)とするとき, 解と係数の間には次の関係がある。\n\\[\n\\alpha + \\beta = - \\frac{b}{a}, \\quad \\alpha\\beta = \\frac{c}{a}\n\\]"
  },
  {
    "objectID": "posts/2023-08-03/index.html#乗法の公式",
    "href": "posts/2023-08-03/index.html#乗法の公式",
    "title": "公式",
    "section": "",
    "text": "\\((x + b)(x + d) = x^2 + (b+d)x + bd\\)\n\\((ax + b)(cx + d) = acx^2 + (ad + bc)x + bd\\)\n\\((x+y)^2 = x^2 + 2xy + y^2\\)\n\\((x-y)^2 = x^2 - 2xy + y^2\\)\n\\((x+y)(x-y) = x^2 - y^2\\)\n\\((x+y+z)^3 = x^2 + y^2 + z^2 + 2xy + 2yz +2zx\\)\n\\((x+y)^3= x^3 + 3x^2y + 3xy^2 + y^3\\)\n\\((x-y)^3= x^3 - 3x^2y + 3xy^2 - y^3\\)"
  },
  {
    "objectID": "posts/2023-08-03/index.html#フーリエ変換",
    "href": "posts/2023-08-03/index.html#フーリエ変換",
    "title": "公式",
    "section": "フーリエ変換",
    "text": "フーリエ変換\n\\(\\hat{f}(\\xi) := \\int_{-\\infty}^{\\infty} f(x)e^{- 2\\pi i x \\xi}\\,dx\\)\n\n\\(\\xi\\) は任意の実数\n:= という記号は，左辺を右辺で定義するという意味\n\\(\\int_{}{}\\) は積分記号\n\\(e^{- 2\\pi i x \\xi}\\) は周波数（？）\n\\(dx\\) は瞬間的な変化量"
  },
  {
    "objectID": "posts/2023-08-03/index.html#偏微分方程式",
    "href": "posts/2023-08-03/index.html#偏微分方程式",
    "title": "公式",
    "section": "偏微分方程式",
    "text": "偏微分方程式\n以下では未知関数 ψ の変数 x に関する偏微分を ψx のように表す： \\[\n\\psi_x := {\\partial \\psi \\over \\partial x},\n\\]\n\\[\n\\psi_{xy} := {\\partial^2 \\psi \\over \\partial y\\, \\partial x}.\n\\]"
  },
  {
    "objectID": "posts/2023-08-16/index.html",
    "href": "posts/2023-08-16/index.html",
    "title": "langchainrb eth拡張",
    "section": "",
    "text": "require 'bundler/setup'\nrequire \"langchain\"\n\nthread = Langchain::Thread.new\nassistant = Langchain::Assistant.new(\n  llm: Langchain::LLM::OpenAI.new(api_key: ENV[\"OPENAI_API_KEY\"]),\n  thread: thread,\n  tools: [\n    Langchain::Tool::Eth.new(api_key: ENV[\"INFURA_ACCESS_TOKEN\"])\n    ]\n)\n\nassistant.add_message_and_run(content: \"geeknees.eth\", auto_tool_execution: true)\nassistant.thread.messages.last.content\n\nI, [2024-04-25T23:04:36.281574 #29946]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\nI, [2024-04-25T23:04:37.304850 #29946]  INFO -- : [Langchain.rb] [Langchain::Tool::Eth]: Executing \"geeknees.eth\"\nI, [2024-04-25T23:04:38.893872 #29946]  INFO -- : [Langchain.rb] [Langchain::Assistant]: Sending a call to Langchain::LLM::OpenAI\n\n\n\"The Ethereum address associated with the ENS name \\\"geeknees.eth\\\" is 0x0ff051891debb1f6beee93b932dcae625735a2d8.\""
  }
]